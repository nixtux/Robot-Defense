piece base,body,turret1,sleeve1, turret2,sleeve2, barrela,barrelb,flare1,flare2, wake1,wake2,wake3;

static-var fire,restore_delay;

#define SIG_AIM1 2
#define SIG_AIM2 4
#define SIG_WAKE 2
#define SMOKEPIECE1 turret1
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
{ hide flare1;
  hide flare2;
  restore_delay=3000;
  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay()
{ sleep restore_delay;
  turn turret1 to y-axis 0 speed <35>;
  turn sleeve1 to x-axis 0 speed <15>;
 }

RestoreAfterDelay2()
{ sleep restore_delay;
  turn turret2 to y-axis 0 speed <35>;
  turn sleeve2 to x-axis 0 speed <15>;
 }

StartMoving()
{ signal SIG_WAKE;
  set-signal-mask SIG_WAKE;
  while (TRUE)
   { emit-sfx SFXTYPE_WAKE1 from wake1;
     emit-sfx SFXTYPE_WAKE1 from wake2;
     emit-sfx SFXTYPE_WAKE1 from wake3;
     sleep 200;
    }
 }

StopMoving()
{ signal SIG_WAKE;
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM1;
  set-signal-mask SIG_AIM1;
  turn turret1 to y-axis heading speed <145>;
  turn sleeve1 to x-axis (0-pitch) speed <95>;
  wait-for-turn turret1 around y-axis;
  wait-for-turn sleeve1 around x-axis;
  start-script RestoreAfterDelay();	
  return(TRUE);
 }


AimSecondary(heading,pitch)
{ signal SIG_AIM2;
  set-signal-mask SIG_AIM2;
  turn turret2 to y-axis heading speed <145>;
  turn sleeve2 to x-axis (0-pitch) speed <95>;
  wait-for-turn turret2 around y-axis;
  wait-for-turn sleeve2 around x-axis;
  start-script RestoreAfterDelay2();	
  return(TRUE);
 }

FirePrimary()
   { 
     show flare1;
     sleep 150;
     hide flare1;
     return( 0 );
   }

FireSecondary()
{
    move barrelb to z-axis [-1.2] speed [500];
     move barrela to z-axis [-.5] speed [200];
     show flare2;
     sleep 150;
     move barrela to z-axis [0] speed [3.0];
     move barrelb to z-axis [0] speed [3.0];
     hide flare2;
     return( 0 );
   }

AimFromPrimary(piecenum)
{ piecenum=turret1;
 }

AimFromSecondary(piecenum)
{ piecenum=turret2;
 }

QueryPrimary(piecenum)
{ 
piecenum=flare1; 
 }

QuerySecondary(piecenum)
{ piecenum=flare2;
 }

SweetSpot(piecenum)
{ piecenum=turret1;
 }

Killed( severity, corpsetype )
{ hide flare1;
  hide flare2;
  explode base type BITMAPONLY | BITMAP3;
  explode body type BITMAPONLY | BITMAP4;
  if (severity < 25)
   { corpsetype = 1;
     return( 0 );
    }
  explode barrela type FALL | EXPLODE_ON_HIT | BITMAP1;
  explode barrelb type FALL | EXPLODE_ON_HIT | BITMAP1;
  explode turret1 type FALL | EXPLODE_ON_HIT | BITMAP2;
  explode turret2 type SHATTER | BITMAP1;
  if (severity < 50)
   { corpsetype = 2;
     return( 0 );
    }
  explode sleeve1 type FALL | EXPLODE_ON_HIT | BITMAP1;
  explode sleeve2 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
  explode flare1 type BITMAPONLY | BITMAP4;
  explode sleeve1 type BITMAPONLY | BITMAP5;
  corpsetype = 3;
 }
