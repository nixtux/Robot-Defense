#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, link, rengine, lengine, rwing1, lwing1, rwing2, lwing2, jet1, jet2, jet3, body, jet4, jet5, jet6, jet7, jet8,rearengine,lpiv,rpiv,flare1,flare2;

static-var  Static_Var_1, unitviewer, OK;

#define SMOKEPIECE1 base

#include "StateChg.h"

activatescr()
{
	if( TRUE )
	{
	OK=1;
	turn rwing1 to z-axis <-85> speed <57>;
	turn rwing2 to z-axis <150> speed <100>;
	turn rpiv to z-axis <-65> speed <50>;
	turn lwing1 to z-axis <85> speed <57>;
	turn lwing2 to z-axis <-150> speed <100>;
	turn lpiv to z-axis <65> speed <50>;

	sleep 1100;
	}
	sleep 44;
}

deactivatescr()
{
	if( TRUE )
	{
	OK=0;
	turn rwing1 to z-axis <0> speed <57>;
	turn rwing2 to z-axis <0> speed <100>;
	turn rpiv to z-axis <0> speed <50>;
	turn lwing1 to z-axis <0> speed <57>;
	turn lwing2 to z-axis <0> speed <100>;
	turn lpiv to z-axis <0> speed <50>;
	}
	sleep 44;
}
#include "SmokeUnit.h"
#define ACTIVATECMD			call-script activatescr();
#define DEACTIVATECMD		call-script deactivatescr();
#include "StateChg.h"

Create()
{
	unitviewer = FALSE;
	Static_Var_1 = 0;
	OK=0;
	call-script InitState();
	start-script SmokeUnit();
}

Demo()
{
	unitviewer = TRUE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryTransport(piecenum)
{
	piecenum = link;
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
}

QuerySecondary(piecenum)
{
	piecenum = flare2;
}


Activate()
{
	if( unitviewer )
	{
		start-script RequestState(0);
	}
}

BeginTransport(height)
{
	move link to y-axis (0 - height) now;
	start-script RequestState(0);
}

Deactivate()
{
	if( unitviewer )
	{
		start-script RequestState(1);
	}
}

EndTransport()
{
	start-script RequestState(1);
}

ProcessFlames()
{
while( TRUE )
	{
	if( Static_Var_1 == 1 OR Static_Var_1 == 2 OR Static_Var_1 == 3 )
		{
		emit-sfx 0 from jet1;
		emit-sfx 0 from jet2;
		emit-sfx 0 from jet5;
		emit-sfx 0 from jet6;
		if ( OK )
			{
			emit-sfx 0 from jet3;
			emit-sfx 0 from jet4;
			emit-sfx 0 from jet7;
			emit-sfx 0 from jet8;
			}
		}
	sleep 100;
	}
}

StartMoving()
{
	turn rengine to x-axis <30> speed <30>;
	turn lengine to x-axis <30> speed <30>;
	turn rearengine to x-axis <70> speed <30>;
	sleep 1000;

}

StopMoving()
{
	signal 2;
	Static_Var_1 = 0;
	turn rengine to x-axis <0> speed <100>;
	turn lengine to x-axis <0> speed <100>;
	turn rearengine to x-axis <0> speed <100>;	
	sleep 1000;
}

MoveRate1()
{
	signal 2;
	set-signal-mask 2;
	turn rengine to x-axis <30> speed <30>;
	turn lengine to x-axis <30> speed <30>;
	start-script ProcessFlames();
	Static_Var_1 = 1;
}

MoveRate2()
{
	signal 2;
	set-signal-mask 2;
	turn rengine to x-axis <60> speed <30>;
	turn lengine to x-axis <60> speed <30>;
	start-script ProcessFlames();
	Static_Var_1 = 2;
}

MoveRate3()
{
	signal 2;
	set-signal-mask 2;
	turn rengine to x-axis <80> speed <30>;
	turn lengine to x-axis <80> speed <30>;
	start-script ProcessFlames();
	Static_Var_1 = 3;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lengine type BITMAPONLY | BITMAP1;
		explode rengine type BITMAPONLY | BITMAP2;
		explode rwing1 type BITMAPONLY | BITMAP3;
		explode base type BITMAPONLY | BITMAP4;
		explode jet1 type BITMAPONLY | BITMAP5;
		explode jet2 type BITMAPONLY | BITMAP1;
		explode jet3 type BITMAPONLY | BITMAP2;
		explode lwing2 type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode rengine type BITMAPONLY | BITMAP1;
		explode lengine type BITMAPONLY | BITMAP2;
		explode body type SHATTER | BITMAP3;
		explode base type BITMAPONLY | BITMAP4;
		explode jet1 type FALL | BITMAP5;
		explode jet2 type FALL | BITMAP1;
		explode jet3 type FALL | BITMAP2;
		explode lwing1 type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode rengine type BITMAPONLY | BITMAP1;
		explode lengine type BITMAPONLY | BITMAP2;
		explode body type SHATTER | BITMAP3;
		explode lwing1 type BITMAPONLY | BITMAP4;
		explode jet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode jet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode jet3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rwing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode rengine type BITMAPONLY | BITMAP1;
	explode lengine type BITMAPONLY | BITMAP2;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode rwing1 type BITMAPONLY | BITMAP4;
	explode jet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode jet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode jet3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lwing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
