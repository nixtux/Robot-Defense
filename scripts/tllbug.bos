piece base,body,turret,barrel,flare,rlegf,rlegb,llegf,llegb;

static-var bMoving,restore_delay;

#define SIG_AIM 2
#define SMOKEPIECE1 turret

#include "EXPtype.h"
#include "smokeunit.h"

walkscr()
{          turn llegb to z-axis <0.00> NOW;
          turn llegb to z-axis <-38.26> speed <910.00>;
          turn rlegb to y-axis <55.36> NOW;
          turn rlegb to z-axis <38.26> NOW;
          turn rlegb to z-axis <0.00> speed <910.00>;
          turn rlegf to y-axis <0.00> NOW;
          turn rlegf to y-axis <60.31> speed <1446.55>;
          turn rlegf to z-axis <37.81> NOW;
          turn llegf to y-axis <-60.31> NOW;
          turn llegf to y-axis <0.00> speed <1446.55>;
          turn llegf to z-axis <0.00> NOW;
          sleep 42;
          turn llegb to y-axis <-55.36> speed <1323>;
          turn llegb to z-axis <-38.26> speed <0.00>;
          turn rlegb to y-axis <0.00> speed <1321>;
          turn rlegb to z-axis <0.00> speed <0.00>;
          turn rlegf to z-axis <0.00> speed <910.00>;
          turn llegf to z-axis <-38.26> speed <910.00>;
          sleep 42;
          turn llegb to y-axis <-55.36> speed <0.00>;
          turn llegb to z-axis <0.00> speed <910.00>;
          turn rlegb to z-axis <38.26> speed <910.00>;
          turn rlegf to y-axis <0.00> speed <1442>;
          turn rlegf to z-axis <0.00> speed <0.00>;
          turn llegf to y-axis <-60.31> speed <1442>;
          turn llegf to z-axis <-38.26> speed <0.00>;
          sleep 42;
          turn llegb to y-axis <0.00> speed <1323>;
          turn llegb to z-axis <0.00> speed <0.00>;
          turn rlegb to y-axis <55.36> speed <1323>;
          turn rlegb to z-axis <38.26> speed <0.00>;
          turn rlegf to z-axis <37.81> speed <910>;
          turn llegf to y-axis <-60.31> speed <0.00>;
          turn llegf to z-axis <0.00> speed <910>;
          sleep 42;
 }

MotionControl()
{ var moving;
  while (TRUE)
   { moving = bMoving;
     if (moving)
      { call-script walkscr();
       }
     if (NOT moving)
      { sleep 100; }
    }
 }

Create()
{ bMoving = FALSE;
  restore_delay = 3000;
  start-script MotionControl();
  start-script SmokeUnit();
 }

StartMoving()
{ bMoving = TRUE;
 }

StopMoving()
{ bMoving = FALSE;
 }

SweetSpot(piecenum)
{ piecenum=body;
 }

FirePrimary()
{ 
 }

RestoreAfterDelay()
{ sleep restore_delay;
  turn turret to y-axis 0 speed <90>;
  turn barrel to x-axis <0> speed <45>;
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM;
  set-signal-mask SIG_AIM;
  turn turret to y-axis heading speed <150>;
  turn barrel to x-axis (<0> - pitch) speed <200>;
  wait-for-turn turret around y-axis;
  wait-for-turn barrel around x-axis;
  start-script RestoreAfterDelay();
  return( TRUE );
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

AimFromPrimary(piecenum)
{ piecenum=barrel;
 }

QueryPrimary(piecenum)
{ piecenum=flare;
 }

Killed( severity, corpsetype )
{ explode llegf type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode llegf type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode rlegb type BITMAPONLY | BITMAP3;
  explode rlegf type BITMAPONLY | BITMAP3;
  explode body type BITMAPONLY | BITMAP4;
  if (severity <= 25)
   { corpsetype = 1;
     return( 0 );
    }
  explode barrel type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode turret type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  if (severity <= 50)
   { corpsetype = 2;
     return( 0 );
    }
  corpsetype = 3;
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}


