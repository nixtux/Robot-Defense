// by Nikola Genkov, nikola_g@yahoo.com

piece base,body,plate,bearing,turret,nano,spray,rdoor,ldoor,wake1,wake2;

static-var buildheading;

#define SMOKEPIECE1 rdoor
#define SMOKEPIECE2 ldoor
#define SIG_NUM1 2

#include "StateChg.h"
#include "watersmokeunit.h"
#include "exptype.h"

Go()
{ turn rdoor to z-axis <-60> speed <180>;
  turn ldoor to z-axis <60> speed <180>;
  wait-for-turn ldoor around z-axis;
  move plate to y-axis [1] speed [2];
  move ldoor to y-axis [-2] speed [4];
  move rdoor to y-axis [-2] speed [4];
  wait-for-move plate along y-axis;
  turn turret to x-axis <-90> speed <180>;
  turn nano to x-axis <90> speed <180>;
  wait-for-turn turret around x-axis;
  turn bearing to y-axis buildheading speed <160>;
  wait-for-turn bearing around y-axis;
  set INBUILDSTANCE to TRUE;
 }

Stop()
{ set INBUILDSTANCE to FALSE;
  turn bearing to y-axis <0> speed <160>;
  wait-for-turn bearing around y-axis;
  turn turret to x-axis <0> speed <180>;
  turn nano to x-axis <0> speed <180>;
  wait-for-turn turret around x-axis;
  move plate to y-axis [0] speed [4];
  move ldoor to y-axis [0] speed [4];
  move rdoor to y-axis [0] speed [2];
  wait-for-move plate along y-axis;
  turn rdoor to z-axis <0> speed <180>;
  turn ldoor to z-axis <0> speed <180>;
  wait-for-turn ldoor around z-axis;
 }

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"

Create()
{ buildheading = <0>;
  call-script InitState();
  start-script SmokeUnit();
  start-script MotionControl();
 }

Activate()
{ start-script RequestState( ACTIVE );
 }

Deactivate()
{ start-script RequestState( INACTIVE );
 }

StartBuilding(heading)
{ buildheading = heading;
  start-script RequestState( ACTIVE );
 }

StopBuilding()
{ start-script RequestState( INACTIVE );
 }

QueryNanoPiece(piecenum)
{ piecenum = spray;
 }

TargetHeading( heading )
{ buildheading = 0 - heading;
 }

SweetSpot(piecenum)
{ piecenum=bearing;
 }

StartMoving()
{ SIGNAL SIG_NUM1;
  SET-SIGNAL-MASK SIG_NUM1;
  spin wake1 around z-axis speed <30> accelerate <2>;
  spin wake2 around z-axis speed <30> accelerate <2>;
  WHILE ( TRUE )
   { EMIT-SFX SFXTYPE_SUBBUBBLES FROM wake1;
     EMIT-SFX SFXTYPE_SUBBUBBLES FROM wake2;
     SLEEP 250;
    }
 }

StopMoving()
{ SIGNAL SIG_NUM1;
  stop-spin wake1 around z-axis;
  stop-spin wake2 around z-axis;
 }

Killed( severity, corpsetype )
{ explode bearing type BITMAPONLY | BITMAP5;
  explode body type BITMAPONLY | BITMAP3;
  explode bearing type SHATTER | EXPLODE_ON_HIT | BITMAP3;
  explode nano type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  if (severity <= 25)
   { corpsetype = 1;
     return( 0 );
    }
  explode turret type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  explode rdoor type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  explode ldoor type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  if (severity <= 50)
   { corpsetype = 2;
     return( 0 );
    }
  explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP3;
  corpsetype = 3;
 }