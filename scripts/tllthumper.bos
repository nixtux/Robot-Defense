#define TA

piece base,body,turret,flare,barrel,sleeve;

static-var restore_delay,gun;

#define SIG_NUM1 2
#define SIG_NUM2 4
#define SIG_RESTORE 8
#define SMOKEPIECE1 turret


#include "exptype.h"
#include "rockunit.h"
#include "smokeunit.h"

Create()
  { HIDE flare;
    restore_delay = 3000;
    start-script SmokeUnit(); 
   }

SetMaxReloadTime(time)
  {  restore_delay = time * 2;
   }

RestoreAfterDelay()
  { SIGNAL SIG_RESTORE;
    SET-SIGNAL-MASK SIG_RESTORE;
    SLEEP restore_delay;
    TURN turret to y-axis <0> SPEED <35.00>;
    TURN sleeve to x-axis <0> SPEED <15.00>;
   }

AimPrimary(heading,pitch)
  { SIGNAL SIG_NUM1;
    SIGNAL SIG_RESTORE;
    SET-SIGNAL-MASK SIG_NUM1;
    TURN turret to y-axis heading SPEED <35.00>;
    TURN sleeve to x-axis (0-pitch) SPEED <15.00>;
    WAIT-FOR-TURN turret around y-axis;
    WAIT-FOR-TURN sleeve around x-axis;
    START-SCRIPT RestoreAfterDelay();
    RETURN ( TRUE );
   }

FirePrimary()
  { 
            SHOW flare;
	MOVE barrel to z-axis [-1.20] speed [500.00];
	SLEEP 200;
	HIDE flare;
   	MOVE barrel to z-axis [0] speed [5.00];
   }

QueryPrimary(piecenum)
  { 
 	piecenum=flare;
   }

AimFromPrimary(piecenum)
  { piecenum=turret;
   }

SweetSpot(piecenum)
  { piecenum=base;
   }

Killed(severity,corpsetype)
  { HIDE flare;
    explode body type BITMAPONLY | BITMAP4;
    explode barrel type FALL | EXPLODE_ON_HIT | BITMAP1;
    if (severity <= 25)
     { 
       corpsetype = 1;
       explode barrel type BITMAPONLY | BITMAP1;
       explode body type BITMAPONLY | BITMAP3;
       explode turret type BITMAPONLY | BITMAP2;
       return(0);
      } 
    explode body type SHATTER | BITMAP2;
    if (severity <= 50)
     { 
       corpsetype = 2;
       explode barrel type FALL | EXPLODE_ON_HIT | BITMAP1;
       explode sleeve type FALL | EXPLODE_ON_HIT | BITMAP3;
       return(0);
      } 
    corpsetype = 3;
    explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
    explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
    explode body type SHATTER | BITMAP2;
    return(0);
   }

