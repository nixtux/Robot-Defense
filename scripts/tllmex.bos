piece base, socle, body, rotor, locks, l1, l2, l3, lock1, lock2, lock3, la, lb, lc, steam1, steam2, steam3;

static-var	spinspeed,spinacc,spindec;

#define SMOKEPIECE1 base

#include "StateChg.h"
#include "smokeunit.h"
#include "exptype.h"

Go()
	{
	Set ARMORED to FALSE;
	dont-cache rotor;
	spin rotor around y-axis speed spinspeed accelerate spinacc;
	sleep 500;
	}

Stop()
	{
	stop-spin rotor around y-axis decelerate spindec;
	Set ARMORED to TRUE;
	}

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"

Create()
	{
	spinspeed = 0;
	spinacc = 91;
	spindec = 200;

	dont-cache lock1;
	dont-cache lock2;
	dont-cache lock3;
	dont-cache body;

	turn l2 to y-axis <120> now;
	turn l3 to y-axis <-120> now;
	turn lock1 to x-axis <-90> now;
	turn lock2 to x-axis <-90> now;
	turn lock3 to x-axis <-90> now;
	move body to y-axis [8] now;


	call-script InitState();
	 while (get BUILD_PERCENT_LEFT)
    		{
		sleep 500; 
		}

	move body to y-axis [6] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [7] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [5] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [6] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [4] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [5] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [3] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [4] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [2] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [3] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [1] speed [10];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [2] speed [8];
	wait-for-move body along y-axis;
 	emit-sfx SFXTYPE_WHITESMOKE from steam1;
	emit-sfx SFXTYPE_WHITESMOKE from steam2;
	emit-sfx SFXTYPE_WHITESMOKE from steam3;
	move body to y-axis [0] speed [5];

	turn lock1 to x-axis <0> speed <60>;
	turn lock2 to x-axis <0> speed <60>;
	turn lock3 to x-axis <0> speed <60>;

	wait-for-turn lock1 around x-axis;

	turn la to z-axis <180> speed <200>;
	turn lb to z-axis <180> speed <200>;
	turn lc to z-axis <180> speed <200>;

	wait-for-turn la around z-axis;

	turn lock1 to x-axis <-60> speed <60>;
	turn lock2 to x-axis <-60> speed <60>;
	turn lock3 to x-axis <-60> speed <60>;

	start-script SmokeUnit();
	}

Activate()
	{
	start-script RequestState( ACTIVE );
	}

Deactivate()
	{
	start-script RequestState( INACTIVE );
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

SetSpeed(the_speed)
	{
	spinspeed = the_speed * 45;
	}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode body type	BITMAPONLY | BITMAP1;
		explode socle type	BITMAPONLY | BITMAP2;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode socle type	SHATTER | BITMAP1;
		explode body type	BITMAPONLY | BITMAP2;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode body type	SHATTER | EXPLODE_ON_HIT | BITMAP1;
		explode socle type	BITMAPONLY | BITMAP2;
		return( 0 );
		}

	corpsetype = 3;
	explode rotor type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode body type	SHATTER | EXPLODE_ON_HIT | BITMAP2;
	return( 0 );
	}
