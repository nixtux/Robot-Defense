
piece base,body,turret1,turret2,sleeve1,sleeve2,barrel1,barrel2,barrel3,barrel4;
piece flare1,flare2,flare3,flare4,flare5,flare6, wake1, wake2,wake3;

static-var fire1,fire2,turret,restore_delay;

#define SIG_AIM1 2
#define SIG_AIM2 4
#define SIG_WAKE 8

#define SMOKEPIECE1 base
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
{ hide flare1;
  hide flare2;
  hide flare3;
  hide flare4;
  fire1=0;
  fire2=0;
  turret=0;
  restore_delay=3000;
  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay()
{ sleep restore_delay;
  turn turret1 to y-axis <0> speed <35>;
  turn turret2 to y-axis <0> speed <35>;
  turn sleeve1 to x-axis <0> speed <15>;
  turn sleeve2 to x-axis <0> speed <15>;
  signal SIG_AIM1;
 }

StartMoving()
{ signal SIG_WAKE;
  set-signal-mask SIG_WAKE;
  while (TRUE)
   { emit-sfx SFXTYPE_WAKE1 from wake1;
     emit-sfx SFXTYPE_WAKE1 from wake2;
     emit-sfx SFXTYPE_WAKE1 from wake3;
     sleep 300;
    }
 }

StopMoving()
{ signal SIG_WAKE;
 }

AimPrimary(heading,pitch)
{ 
  signal SIG_AIM1;
  set-signal-mask SIG_AIM1;
  if ( heading <= <100> or heading >= <260>)
	{
	turret=0;
        	turn turret1 to y-axis heading speed <60>;
	turn sleeve1 to x-axis (0 - pitch) speed <35>;
        	wait-for-turn turret1 around y-axis;
        	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return(TRUE);
    	}
if ( heading > <90> and heading < <270>)
	{
	turret=1;
	turn turret2 to y-axis (<180> + heading) speed <60>;
	turn sleeve2 to x-axis pitch speed <35>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay();
	return(TRUE);
	}
 }

FirePrimary()
	{ 
	if (turret==0)
   		{
		if (fire1==0)
			{
			move barrel1 to z-axis [-1] speed [500];
			show flare1;
     			sleep 150; 
	     		hide flare1;
     			move barrel1 to z-axis [0] speed [3.0];
			fire1=1;
     			return 0; 
			}
		if (fire1==1)
			{
			move barrel2 to z-axis [-1] speed [500];
			show flare2;
     			sleep 150; 
	     		hide flare2;
     			move barrel2 to z-axis [0] speed [3.0];
			fire1=0;
     			return 0; 
			}
		}
	if (turret==1)
   		{
		if (fire2==0)
			{
			move barrel3 to z-axis [1] speed [500];
			show flare3;
     			sleep 150; 
	     		hide flare3;
     			move barrel3 to z-axis [0] speed [3.0];
			fire2=1;
     			return 0; 
			}
		if (fire2==1)
			{
			move barrel4 to z-axis [1] speed [500];
			show flare4;
     			sleep 150; 
	     		hide flare4;
     			move barrel4 to z-axis [0] speed [3.0];
			fire2=0;
     			return 0; 
			}
		}
}


AimFromPrimary(piecenum)
{ 
if (turret==0)
	{
	piecenum=turret1; 
	}
if (turret==1)
	{
	piecenum=turret2; 
	}
 }

QueryPrimary(piecenum)
{ 
if (turret==0)
   		{
		if (fire1==0)
			{
			piecenum=flare1; 
			}
		if (fire1==1)
			{
			piecenum=flare2; 
			}
		}
	if (turret==1)
   		{
		if (fire2==0)
			{
			piecenum=flare3; 
			}
		if (fire2==1)
			{
			piecenum=flare4; 
			}
		}
}

QuerySecondary(piecenum)
{ piecenum=flare5;
 }

QueryTertiary(piecenum)
{ piecenum=flare6;
 }

SweetSpot(piecenum)
{ piecenum=base;
 }

Killed( severity, corpsetype )
{ hide flare1;
  hide flare2;
  hide flare3;
  hide flare4;
  hide flare5;
  hide flare6;
  explode barrel1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
  explode barrel2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode barrel3 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode body type BITMAPONLY | BITMAP5;
  explode turret2 type BITMAPONLY | BITMAP4;
  explode turret1 type BITMAPONLY | BITMAP3;
  explode wake1 type BITMAPONLY | BITMAP3;
  explode wake2 type BITMAPONLY | BITMAP3;
  explode flare1 type BITMAPONLY | BITMAP3;
  explode flare3 type BITMAPONLY | BITMAP3;
  if (severity <= 25)
   { corpsetype = 1; return( 0 ); }
  explode turret1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode sleeve2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode turret2 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
  explode sleeve1 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
  if (severity <= 50)
   { corpsetype = 2; return( 0 ); }
  corpsetype = 3;
  explode turret2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode sleeve1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
 }
