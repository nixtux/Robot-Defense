piece base,foundation,turret,ammo1,ammo2,ammo3,ammo4,flare1,flare2,socle,arm1,arm2;

static-var barrel,delay,restore_delay;

#define SIG_AIM	2
#define SMOKEPIECE1 ammo1

#include "EXPtype.h"
#include "smokeunit.h"

Create()
 { hide flare1;
   hide flare2;
   dont-shade foundation;
   dont-shade turret;
   dont-shade flare1;
   dont-shade flare2;
   //dont-shade socle;
   dont-shade arm1;
   dont-shade arm2;
   dont-shade ammo1;
   dont-shade ammo2;
   dont-shade ammo3;
   dont-shade ammo4;
   cache foundation;
   cache turret;
   cache flare1;
   cache flare2;
   cache ammo1;
   cache ammo2;
   cache ammo3;
   cache ammo4;
   barrel=0;
   delay=0;
   restore_delay=5000;
   start-script SmokeUnit();
  }
RestoreAfterDelay()
	{
	SLEEP restore_delay;
            turn arm1 to z-axis <0> speed <50>;
            turn arm2 to z-axis <0> speed <100>;
            turn turret to z-axis <0> speed <50>;
	}

AimPrimary(heading,pitch)
 { signal SIG_AIM;
   set-signal-mask SIG_AIM;
   turn arm1 to z-axis <-25> speed <40>;
   turn arm2 to z-axis <50> speed <80>;
   turn turret to z-axis <-25> speed <40>;
   turn socle to y-axis heading speed <100>;
   wait-for-turn socle around y-axis;
   wait-for-turn turret around z-axis;
   while (delay) { sleep 50; }
   START-SCRIPT RestoreAfterDelay();
   return(TRUE);
  }

FirePrimary()
 { if (barrel==0)
    { show flare1; sleep 200; hide flare1; barrel=1; return 0; }
   if (barrel==1)
    { show flare2; delay=1;
      move ammo1 to z-axis [-5] speed [5];
      sleep 200; hide flare2; 
      wait-for-move ammo1 along z-axis;
      move ammo1 to y-axis [-2] speed [2];
      move ammo4 to y-axis [-2] speed [2];
      move ammo2 to y-axis [2] speed [2];
      move ammo3 to y-axis [2] speed [2];
      wait-for-move ammo3 along y-axis;
      move ammo1 to y-axis [0] NOW;
      move ammo2 to y-axis [0] NOW;
      move ammo3 to y-axis [0] NOW;
      move ammo4 to y-axis [0] NOW;
      move ammo1 to z-axis [0] NOW;
      delay=0; barrel=0; }
  }

AimFromPrimary(piecenum)
 { piecenum=ammo1;
  }

QueryPrimary(piecenum)
 { piecenum=flare1;
   if (barrel==1) { piecenum=flare2; }
  }

SweetSpot(piecenum)
 { piecenum=turret;
  }

Killed( severity, corpsetype )
 { hide flare1;
   hide flare2;
   explode ammo1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
   explode ammo2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
   explode ammo3 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
   explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP2;
   explode foundation type BITMAPONLY | BITMAP4;
   if (severity <= 25)
    { corpsetype = 1;
      return( 0 );
     }
   if (severity <= 50)
    { corpsetype = 2;
      return( 0 );
     }
   corpsetype = 3;
  }
