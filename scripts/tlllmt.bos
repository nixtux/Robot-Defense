// by Nikola Genkov, nikola_g@yahoo.com

piece base,tower,bearing,turret,barrel1,barrel2,barrel3,barrel4,flare1,flare2,flare3,flare4;

static-var barrel;

#define SIG_AIM	2
#define SMOKEPIECE1 turret

#include "smokeunit.h"
#include "EXPtype.h"

Create()
 { hide flare1;
   hide flare2;
   hide flare3;
   hide flare4;
   dont-shade tower;
   dont-shade turret;
   dont-shade flare1;
   dont-shade flare2;
   dont-shade flare3;
   dont-shade flare4;
   dont-shade barrel1;
   dont-shade barrel2;
   dont-shade barrel3;
   dont-shade barrel4;
   dont-cache tower;
   dont-cache turret;
   dont-cache flare1;
   dont-cache flare2;
   dont-cache flare3;
   dont-cache flare4;
   dont-cache barrel1;
   dont-cache barrel2;
   dont-cache barrel3;
   dont-cache barrel4;
   barrel=0;   
   start-script SmokeUnit();
  }

AimPrimary(heading,pitch)
 { signal SIG_AIM;
   set-signal-mask SIG_AIM;
   turn bearing to y-axis heading speed <250>;
   wait-for-turn bearing around y-axis;
   return(TRUE);
  }

FirePrimary()
 { if (barrel==0)
    { show flare1; sleep 200; hide flare1; 
      turn turret to y-axis <270> speed <200>;
      barrel=1; return 0; }
   if (barrel==1)
    { show flare2; sleep 200; hide flare2; 
      turn turret to y-axis <180> speed <200>;
      barrel=2; return 0; }
   if (barrel==2)
    { show flare3; sleep 200; hide flare3; 
      turn turret to y-axis <90> speed <200>;
      barrel=3; return 0; }
   if (barrel==3)
    { show flare4; sleep 200; hide flare4; 
      turn turret to y-axis <0> speed <200>;
      barrel=0; return 0; }
  }

AimFromPrimary(piecenum)
 { piecenum=turret;
  }

QueryPrimary(piecenum)
 { if (barrel==0) { piecenum=flare1; }
   if (barrel==1) { piecenum=flare2; }
   if (barrel==2) { piecenum=flare3; }
   if (barrel==3) { piecenum=flare4; }
  }

SweetSpot(piecenum)
 { piecenum=base;
  }

Killed( severity, corpsetype )
 { hide flare1;
   hide flare2;
   hide flare3;
   hide flare4;
   explode barrel1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
   explode barrel2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
   explode barrel3 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
   explode barrel4 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
   explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP4;
   if (severity <= 25)
    { corpsetype = 1;
      return( 0 );
     }
   if (severity <= 50)
    { corpsetype = 2;
      return( 0 );
     }
   corpsetype = 3;
  }
