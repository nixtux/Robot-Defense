piece base,body,turret,barrel1,flare1,flare2,wake1,wake2,wake3,sleeve,barrel2;

static-var fire1,restore_delay;

#define SIG_AIM1	2
#define SIG_AIM2	4
#define SIG_WAKE	8
#define SMOKEPIECE1 body
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
{ hide flare1;
  hide flare2;
  fire1=1;
  restore_delay=3000;
  start-script SmokeUnit();
  }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
  }

RestoreAfterDelay()
{ sleep restore_delay;
  turn turret to y-axis 0 speed <35>;
  turn sleeve to x-axis 0 speed <30>;
  wait-for-turn turret around x-axis;
  wait-for-turn sleeve around y-axis;
}

StartMoving()
{ signal SIG_WAKE;
  set-signal-mask SIG_WAKE;
  move body to y-axis [0.7] speed [0.2];
  while (TRUE)
   { emit-sfx SFXTYPE_WAKE1 from wake1;
     emit-sfx SFXTYPE_WAKE1 from wake2;
     emit-sfx SFXTYPE_WAKE1 from wake3;
     sleep 200;
    }
 }

StopMoving()
{ signal SIG_WAKE;
  move body to y-axis [0] speed [0.2];
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM1;
  set-signal-mask SIG_AIM1;
  turn turret to y-axis heading speed <145>;
  turn sleeve to x-axis (0-pitch) speed <95>;
  wait-for-turn turret around y-axis;
  wait-for-turn sleeve around x-axis;
  start-script RestoreAfterDelay();	
  return(TRUE);
 }

FirePrimary()
{ 
if (fire1==1)
   { show flare1;
     sleep 150;
     hide flare1;
     fire1 = 2;
     return( 0 );
    }
  show flare2;
  sleep 150;
  hide flare2;
  fire1 = 1;
 }

AimFromPrimary(piecenum)
{ piecenum=turret;
  }

QueryPrimary(piecenum)
{ piecenum=flare1; 
  if (fire1==2)
   { piecenum=flare2; } }

SweetSpot(piecenum)
{ piecenum=turret;
 }

Killed( severity, corpsetype )
{ hide flare1;
  hide flare2;
  explode base type BITMAPONLY | BITMAP3;
  explode body type BITMAPONLY | BITMAP4;
  if (severity < 25)
   { corpsetype = 1;
     return( 0 );
    }
  explode sleeve type FALL | EXPLODE_ON_HIT | BITMAP1;
  explode turret type FALL | EXPLODE_ON_HIT | BITMAP2;
  explode turret type SHATTER | BITMAP1;
  if (severity < 50)
   { corpsetype = 2;
     return( 0 );
    }
  explode barrel1 type FALL | EXPLODE_ON_HIT | BITMAP1;
  explode barrel2 type FALL | EXPLODE_ON_HIT | BITMAP2;
  explode sleeve type SHATTER | EXPLODE_ON_HIT | BITMAP2;
  explode turret type BITMAPONLY | BITMAP4;
  explode body type BITMAPONLY | BITMAP4;
  corpsetype = 3;
 }
