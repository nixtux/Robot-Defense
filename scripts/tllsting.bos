piece base,body,turret1,turret2,launcher1,launcher2,flare1,flare2,wake1,wake2,wake3;
piece turret3,sleeve3,barrel3,barrel4,flare3,flare4;

static-var fire1,fire2,restore_delay;

#define SIG_AIM1 2
#define SIG_AIM2 4
#define SIG_AIM3 8
#define SIG_WAKE 16

#define SMOKEPIECE1 base
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
{ hide flare1;
  hide flare2;
  hide flare3;
  hide flare4;
  fire1=0;
 while( get BUILD_PERCENT_LEFT )
		{
			sleep 1000;
		}
  turn sleeve3 to x-axis <-90> speed <100>;
  restore_delay=3000;
  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay1()
{ sleep restore_delay;
  turn turret1 to y-axis 0 speed <60>;
  turn launcher1 to x-axis 0 speed <35>;
 }

RestoreAfterDelay2()
{ sleep restore_delay;
  turn turret2 to y-axis 0 speed <60>;
  turn launcher2 to x-axis 0 speed <35>;
 }

RestoreAfterDelay3()
{ sleep restore_delay;
  turn turret3 to y-axis 0 speed <60>;
  turn sleeve3 to x-axis <-90> speed <75>;
 }

StartMoving()
{ signal SIG_WAKE;
  set-signal-mask SIG_WAKE;
  while (TRUE)
   { emit-sfx SFXTYPE_WAKE1 from wake1;
     emit-sfx SFXTYPE_WAKE1 from wake2;
     emit-sfx SFXTYPE_WAKE1 from wake3;
     sleep 300;
    }
 }

StopMoving()
{ signal SIG_WAKE;
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM1;
  set-signal-mask SIG_AIM1;
  turn turret1 to y-axis heading speed <160>;
  turn launcher1 to x-axis (0-pitch) speed <85>;
  wait-for-turn turret1 around y-axis;
  wait-for-turn launcher1 around x-axis;
  start-script RestoreAfterDelay1();
  return(TRUE);
 }
Aimsecondary(heading,pitch)
{ signal SIG_AIM2;
  set-signal-mask SIG_AIM2;
  turn turret2 to y-axis heading speed <160>;
  turn launcher2 to x-axis (0-pitch) speed <85>;
  wait-for-turn turret2 around y-axis;
  wait-for-turn launcher2 around x-axis;
  start-script RestoreAfterDelay2();
  return(TRUE);
 }

AimTertiary(heading,pitch)
{ signal SIG_AIM3;
  set-signal-mask SIG_AIM3;
  turn turret3 to y-axis heading speed <300>;
  turn sleeve3 to x-axis (0-pitch) speed <150>;
  wait-for-turn turret3 around y-axis;
  wait-for-turn sleeve3 around x-axis;
  start-script RestoreAfterDelay3();
  return(TRUE);
 }

FirePrimary()
{ 
}

FireSecondary()
{ 
}

FireTertiary()
{ if (fire2==0)
   { 
     move barrel3 to z-axis [-1] speed [500];
     show flare3; sleep 200; hide flare3; 
     move barrel3 to z-axis [0] speed [5];
     fire2=1; 
     return 0; 
    }
  if (fire2==1)
   { 
     move barrel4 to z-axis [-1] speed [500];
     show flare4; sleep 200; hide flare4; 
     move barrel4 to z-axis [0] speed [5];
     fire2=0; 
     return 0; 
   }
}

AimFromPrimary(piecenum)
{ 
  piecenum=launcher1;
 }

AimFromSecondary(piecenum)
{ 
  piecenum=launcher2;
 }

AimFromTertiary(piecenum)
{ 
 piecenum=turret3;
 }

QueryPrimary(piecenum)
{ 
  piecenum=flare1;
 }

QuerySecondary(piecenum)
{ 
  piecenum=flare2;
 }

QueryTertiary(piecenum)
{ if (fire2==0) { piecenum=flare3; return 0; }
  if (fire2==1) { piecenum=flare4; return 0; }
 }

SweetSpot(piecenum)
{ piecenum=turret3;
 }

Killed( severity, corpsetype )
{ hide flare1;
  hide flare2;
  hide flare3;
  hide flare4;

  explode barrel3 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode barrel4 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode body type BITMAPONLY | BITMAP5;
  explode turret1 type BITMAPONLY | BITMAP4;
  explode turret2 type BITMAPONLY | BITMAP3;
  explode wake1 type BITMAPONLY | BITMAP3;
  explode wake2 type BITMAPONLY | BITMAP3;
  if (severity <= 25)
   { corpsetype = 1; return( 0 ); }
  explode turret2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode launcher1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode turret1 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
  explode launcher2 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
  if (severity <= 50)
   { corpsetype = 2; return( 0 ); }
  corpsetype = 3;
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
 }
