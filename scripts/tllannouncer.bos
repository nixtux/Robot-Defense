
piece base,body,turret,holder,launcher,flare1,flare2,flare3,roues;

static-var restore_delay,fire;

#define SIG_AIM 2
#define SIG_MOVE 4
#define SMOKEPIECE1 launcher
#include "smokeunit.h"
#include "exptype.h"
#include "hitweap.h"

StartMoving()
{ signal SIG_MOVE;
  set-signal-mask SIG_MOVE;
  spin roues around x-axis speed <150>;
  sleep 300;
  spin roues around x-axis speed <250>;
 }

StopMoving()
{ signal SIG_MOVE;
   stop-spin roues around x-axis;
 }


Create()
{ hide flare1;
  hide flare2;
  hide flare3;
  fire = 0;
  restore_delay=3000;
  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay()
{ set-signal-mask SIG_AIM;
  sleep restore_delay;
  turn turret to y-axis <0> speed <150>;
  turn launcher to x-axis <0> speed <150>;
  wait-for-turn turret around y-axis;
  turn holder to x-axis <-50> speed <150>;
  turn launcher to x-axis <50> speed <150>;
  move turret to z-axis [0] speed [5];
  wait-for-move turret along y-axis;
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM;
  set-signal-mask SIG_AIM;
  move turret to z-axis [-2] speed [9];
  turn holder to x-axis <0> speed <150>;
  turn turret to y-axis heading speed <250>;
  turn launcher to x-axis (0-pitch) speed <150>;
  wait-for-turn turret around y-axis;
  wait-for-turn launcher around x-axis;
  start-script RestoreAfterDelay();
  return(TRUE);
 }

FirePrimary()
{ if (fire==0)
   { show flare1; sleep 200; hide flare1;
     fire=1; return 0; }
  if (fire==1)
   { show flare2; sleep 200; hide flare2;
     fire=2; return 0; }
  show flare3; sleep 200; hide flare3;
  fire=0;
 }

AimFromPrimary(piecenum)
{ piecenum=launcher;
 }

QueryPrimary(piecenum)
{ if (fire==0)
   { piecenum=flare1; }
  if (fire==1)
   { piecenum=flare2; }
  if (fire==2)
   { piecenum=flare3; }
 }

SweetSpot(piecenum)
{ piecenum=body;
 }

Killed( severity, corpsetype )
{ 
  explode base type BITMAPONLY | BITMAP4;
  if (severity <= 25)
   { corpsetype = 1;
     explode launcher type BITMAPONLY | BITMAP4;
     explode holder type BITMAPONLY | BITMAP5;
     return( 0 );
    }
  explode launcher type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
  explode holder type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  if (severity <= 50)
   { corpsetype = 2;
     return( 0 );
    }
  corpsetype = 3;
  explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP2;
  explode holder type SHATTER | EXPLODE_ON_HIT | BITMAP2;
 }
