//define TA
piece base ,body ,turret ,arm,door1,door2,spray,nano,wakes ,wake1 ,wake2 ,wake3 ,wake4 ,wake5 ,wake6 ,wake7 ,wake8,p ;
static-var bLevel_0,buildheading;
	
#define SIG_NUM1	2
#define SIG_NUM2	4
#define SMOKEPIECE base
#include "smokeunit.h"
#include "StateChg.h"

activatescr()
{
	if( TRUE )
	{
	  turn door1 to z-axis <-130> speed <180>;
	  turn door2 to z-axis <130> speed <180>;
	  sleep 500;
	}
	if( TRUE )
	{
	  move turret to y-axis [2] speed [7];
	  turn arm to x-axis <50> speed <120>;
	  turn nano to x-axis <-50> speed <120>;
	  sleep 100;
	}
sleep 100;
 }

deactivatescr()
{
	if( TRUE )
	{
	move turret to y-axis [0] speed [10];
	turn arm to x-axis <0> speed <150>;
	turn nano to x-axis <0> speed <150>;
	sleep 500;
	}
	if( TRUE )
	{
	turn door1 to z-axis <0> speed <180>;
	turn door2 to z-axis <0> speed <180>;
	}
sleep 10;
 }

Go()
{ call-script activatescr();
  turn turret to y-axis (buildheading) speed <190>;
  wait-for-turn turret around y-axis;
  set INBUILDSTANCE to TRUE;
 }

Stop()
{ set INBUILDSTANCE to FALSE;
   turn turret to y-axis <0> speed <190>;
   wait-for-turn turret around y-axis;
  call-script deactivatescr();
 }

#include "Rockunit.h"
#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"

Create()
	{
		buildheading = <0>;
		START-SCRIPT SmokeUnit();
		call-script InitState();
	}

Activate()
{ start-script RequestState( ACTIVE );
 }

Deactivate()
{ start-script RequestState( INACTIVE );
 }


StartMoving()
		{
			SIGNAL SIG_NUM2;
			SET-SIGNAL-MASK SIG_NUM2;
			var fl, flb;
			fl=3; //Wake2;
			flb=4; //ReverseWake1;
			While (TRUE)
			{
			if ( bLevel_0 ==1 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			if ( bLevel_0 ==2 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			if ( bLevel_0 ==3 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			SLEEP 300;
			}
		}
StopMoving()
	{
	}
setSFXoccupy(level)
	{
		bLevel_0 = level;
	}

StartBuilding(heading)
{ 
buildheading = heading;
start-script RequestState( ACTIVE );
 }

StopBuilding()
{ 
start-script RequestState( INACTIVE );
 }

QueryNanoPiece(piecenum)
{ piecenum = spray;
 }

TargetHeading( heading )
	{
	buildheading = 0 - heading;
	}

SweetSpot(piecenum)
	{
		piecenum = body;
	}
Killed(severity,corpsetype)
	{
		IF (severity <= 25 )
			{
			corpsetype = 1 ;
			EXPLODE  arm type  	BITMAPONLY | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  nano type  	BITMAPONLY | BITMAP3;
			EXPLODE  turret type  	BITMAPONLY | BITMAP4;
			RETURN ( 0 );
			}
		IF (severity <= 50 )
			{
			corpsetype = 2 ;
			EXPLODE  nano type  	FALL | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  arm type  	FALL | BITMAP3;
			EXPLODE  turret type  	SHATTER | BITMAP4;
			RETURN ( 0 );
			}
		IF (severity <= 99 )
			{
			corpsetype = 3 ;
			EXPLODE  arm type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  door1 type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
			EXPLODE  turret type  	SHATTER | BITMAP4;
			RETURN ( 0 );
			}
		corpsetype = 3 ;
		EXPLODE  door2 type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		EXPLODE  body type  	SHATTER | EXPLODE_ON_HIT | BITMAP2;
		EXPLODE  door1 type  	SHATTER | EXPLODE_ON_HIT | BITMAP4;
		EXPLODE  arm type  	SHATTER | EXPLODE_ON_HIT | BITMAP4;
	}
