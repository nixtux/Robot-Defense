#define TA
// Advanced Solar/Wind Generator 

piece base, body, lights, dish1, dish2, dish3, dish4, dish5;

static-var built, lastfanspeed, lastdir;

#define SMOKEPIECE1 base
#define EXPLODEPIECE1 dish1
#define EXPLODEPIECE2 dish2
#define EXPLODEPIECE3 dish4


#include "StateChg.h"
#include "explodepartwindsolar.h"
#include "exptype.h"

Go()
	{
	SET ARMORED to FALSE;

	dont-cache lights;
	dont-cache dish1;
	dont-cache dish2;
	dont-cache dish3;
	dont-cache dish4;
	dont-cache dish5;

	TURN dish1 to x-axis <-45> SPEED <40>;
	TURN dish2 to x-axis <-45> SPEED <40>;
	TURN dish3 to x-axis <-45> SPEED <40>;
	TURN dish4 to x-axis <-45> SPEED <40>;
	TURN dish5 to x-axis <-45> SPEED <40>;
	}

Stop()
	{

	TURN dish1 to x-axis <0> SPEED <40>;
	TURN dish2 to x-axis <0> SPEED <40>;
	TURN dish3 to x-axis <0> SPEED <40>;
	TURN dish4 to x-axis <0> SPEED <40>;
	TURN dish5 to x-axis <0> SPEED <40>;

	cache lights;
	cache dish1;
	cache dish2;
	cache dish3;
	cache dish4;
	cache dish5;

	SET ARMORED to TRUE;
	}

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"

Create()
	{
	
	dont-shade dish1;
	dont-shade dish2;
	dont-shade dish3;
	dont-shade dish4;
	dont-shade dish5;
	dont-shade lights;


	lastfanspeed = <20>;
	lastdir = 0;


	call-script InitState();
	start-script SmokeUnit();
	}

Activate()
	{
	start-script RequestState( ACTIVE );
	}

Deactivate()
	{
	start-script RequestState( INACTIVE );
	}

SetSpeed(fanspeed)
	{
	}

SetDirection(dir)
	{
	}

SweetSpot(piecenum)
	{
	piecenum=body;
	}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode body type	BITMAPONLY | BITMAP1;
		explode lights type	BITMAPONLY | BITMAP2;
		explode dish3 type	BITMAPONLY | BITMAP3;
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode body type	BITMAPONLY | BITMAP1;
		explode dish3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lights type	BITMAPONLY | BITMAP3;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode dish3 type	BITMAPONLY | BITMAP1;
		explode body type	SHATTER | BITMAP2;
		explode dish2 type	BITMAPONLY | BITMAP3;
		return( 0 );
		}

	corpsetype = 3;
	explode dish2 type	BITMAPONLY | BITMAP1;
	explode body type	SHATTER | BITMAP2;
	explode dish4 type	BITMAPONLY | BITMAP3;
	return( 0 );
	}
