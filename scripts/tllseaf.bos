#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, wake1, wake2, body;

static-var  gun_1, bLevel_0, Static_Var_3;

// Signal definitions
#define SIG_MOVE			2

#define SMOKEPIECE1 base

#include "StateChg.h"

activatescr()
{
	if( TRUE )
	{
	}
	sleep 10;
}

deactivatescr()
{
	if( TRUE )
	{
	}
	sleep 10;
}
#include "SmokeUnit.h"
#define ACTIVATECMD			call-script activatescr();
#define DEACTIVATECMD		call-script deactivatescr();
#include "StateChg.h"

MoveRate2()
{
	if( Rand( 1, 3 ) == 1 AND ( !Static_Var_3 ) )
	{
		Static_Var_3 = 1;
		turn base to z-axis <240.1> speed <120.0>;
		wait-for-turn base around z-axis;
		turn base to z-axis <120.0> speed <180.0>;
		wait-for-turn base around z-axis;
		turn base to z-axis <0.0> speed <120.0>;
		Static_Var_3 = 0;
	}
}

Create()
{
	gun_1 = 0;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		if( bLevel_0== 3 )
		{
			emit-sfx 256 | 3 from wake1;
			emit-sfx 256 | 3 from wake2;
			emit-sfx 256 | 3 from flare1;
			emit-sfx 256 | 3 from flare2;
			emit-sfx 256 | 3 from base;
		}
		sleep 150;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
}
QuerySecondary(piecenum)
{
	piecenum = flare2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode body type BITMAPONLY | BITMAP1;
		explode wake1 type BITMAPONLY | BITMAP2;
		explode wake2 type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode flare1 type FALL | BITMAP3;
		explode flare2 type FALL | BITMAP4;
		explode wake1 type FALL | BITMAP2;
		explode wake2 type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP1;
		explode flare1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode flare2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode wake1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode wake2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode flare1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode flare2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode wake1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode wake2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
}

setSFXoccupy(Level)
{
	bLevel_0 = Level;
}
