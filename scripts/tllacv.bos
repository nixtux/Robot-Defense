#define TA

piece base, body, p1, nano, spray1, spray2, door, wheels1, wheels2, wheels3, p2;
static-var buildheading,spray;

#define SIG_MOVE 4
#define SMOKEPIECE1 body

#include "StateChg.h"
#include "smokeunit.h"
#include "exptype.h"


activatescr()
{
	if( TRUE )
	{
	  move p2 to z-axis [-4] speed [5];
	  sleep 500;
	}
	if( TRUE )
	{
	  turn door to x-axis <-75> speed <180>;
	  sleep 500;
	}
	if( TRUE )
	{
	  move p1 to y-axis [3] speed [7];
	  sleep 250;
	  turn nano to y-axis <0> speed <120>;
	  sleep 100;
	}
sleep 100;
 }

deactivatescr()
{
	if( TRUE )
	{
	turn nano to y-axis <90> speed <150>;
	sleep 500;
	move p1 to y-axis [0] speed [10];
	}
	if( TRUE )
	{
	turn door to x-axis <0> speed <180>;
            sleep 500;

	}
if( TRUE )
	{
	  move p2 to z-axis [0] speed [10];
	}

sleep 10;
 }

Go()
{ call-script activatescr();
  turn nano to y-axis (buildheading) speed <190>;
  wait-for-turn nano around y-axis;
  set INBUILDSTANCE to TRUE;
 }

Stop()
{ set INBUILDSTANCE to FALSE;
   //turn nano to y-axis <0> speed <190>;
   //wait-for-turn nano around y-axis;
  call-script deactivatescr();
 }

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"

Create()
{ 
  buildheading = <0>;
  spray=0;
  turn nano to y-axis <90> now;


  call-script InitState();
  start-script SmokeUnit();
 }

StartMoving()
{ signal SIG_MOVE;
  set-signal-mask SIG_MOVE;
  spin wheels1 around x-axis speed <150>;
  spin wheels2 around x-axis speed <150>;
  spin wheels3 around x-axis speed <150>;
  sleep 300;
  spin wheels1 around x-axis speed <250>;
  spin wheels2 around x-axis speed <250>;
  spin wheels3 around x-axis speed <250>;
 }

StopMoving()
{ signal SIG_MOVE;
   stop-spin wheels1 around x-axis;
   stop-spin wheels2 around x-axis;
   stop-spin wheels3 around x-axis;
 }

Activate()
{ start-script RequestState( ACTIVE );
 }

Deactivate()
{ start-script RequestState( INACTIVE );
 }

StartBuilding(heading)
{ 
buildheading = heading;
start-script RequestState( ACTIVE );
 }

StopBuilding()
{ 
start-script RequestState( INACTIVE );
 }

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = spray1;
	}
	if( spray != 0 )
	{
		piecenum = spray2;
	}
	spray = !spray;
}

TargetHeading( heading )
	{
	buildheading = 0 - heading;
	}

SweetSpot(piecenum)
{ piecenum=body;
 }

Killed( severity, corpsetype )
{ explode door type BITMAPONLY | BITMAP5;
  explode body type BITMAPONLY | BITMAP3;
  explode p1 type SHATTER | EXPLODE_ON_HIT | BITMAP3;
  explode nano type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  if (severity <= 25)
   { corpsetype = 1;
     return( 0 );
    }
  explode body type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  explode door type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  explode p1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  explode nano type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
  if (severity <= 50)
   { corpsetype = 2;
     return( 0 );
    }
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP3;
  corpsetype = 3;
 }