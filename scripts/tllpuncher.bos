
piece base,body,turret,sleeve,barrel1,barrel2,flare2,flare1;

static-var restore_delay,fire;

#define SIG_AIM 2
#define SMOKEPIECE1 turret
#include "smokeunit.h"
#include "exptype.h"
#include "hitweap.h"

Create()
{ hide flare1;
  hide flare2;
  
  fire = 0;
  restore_delay=3000;
  while( get BUILD_PERCENT_LEFT )
		{
			sleep 1000;
		}
   move turret to y-axis [-1.1] speed [10];
   TURN sleeve to x-axis <-90> speed <300>;

  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay()
{ set-signal-mask SIG_AIM;
  sleep restore_delay;
  turn turret to y-axis <0> speed <150>;
  turn sleeve to x-axis <-90> speed <150>;
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM;
  set-signal-mask SIG_AIM;
   turn turret to y-axis heading speed <250>;
  turn sleeve to x-axis (0-pitch) speed <150>;
  wait-for-turn turret around y-axis;
  wait-for-turn sleeve around x-axis;
  start-script RestoreAfterDelay();
  return(TRUE);
 }

FirePrimary()
	{
	if (fire == 0)
		{
		 move barrel1 to z-axis [-1] speed [500];
		show flare1;
		sleep 150;
		move barrel1 to z-axis [0] speed [5];
		hide flare1;
		}
	if (fire == 1)
		{
		 move barrel2 to z-axis [-1] speed [500];
		show flare2;
		sleep 150;
		move barrel2 to z-axis [0] speed [5];
		hide flare2;
		}
	fire = !fire;
	}

AimFromPrimary(piecenum)
{ piecenum=turret;
 }

QueryPrimary(piecenum)
{ if (fire==0)
   { piecenum=flare1; }
  if (fire==1)
   { piecenum=flare2; }
 }

SweetSpot(piecenum)
{ piecenum=body;
 }

Killed( severity, corpsetype )
{ 
  explode base type BITMAPONLY | BITMAP4;
  if (severity <= 25)
   { corpsetype = 1;
     explode turret type BITMAPONLY | BITMAP4;
     explode body type BITMAPONLY | BITMAP5;
     return( 0 );
    }
  explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
  explode barrel1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  if (severity <= 50)
   { corpsetype = 2;
     return( 0 );
    }
  corpsetype = 3;
  explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP2;
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
 }
