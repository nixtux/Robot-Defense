piece base,pelvis,body,rarm,larm,rflare,lflare,llowarm,rlowarm;
piece lthigh,lleg,lfoot,rthigh,rleg,rfoot;

static-var bMoving,bAiming,bCanAim,gun,restore_delay;

#define SIG_MOVEMENT	2
#define SIG_AIM		4
#define SMOKEPIECE1 body
#define ANIM_VARIABLE TRUE

#include "smokeunit.h"
#include "exptype.h"

walklegs()
{ move pelvis to y-axis [-0.55] NOW;
  turn rthigh to x-axis <10.70> NOW;
  turn lthigh to x-axis <-53.49> NOW;
  turn lleg to x-axis <53.49> NOW;
  turn rleg to x-axis <53.49> NOW;
  turn rfoot to x-axis <-37.86> NOW;
  sleep 90;
  move pelvis to y-axis [-0.30] NOW;
  turn rthigh to x-axis <-10.29> NOW;
  turn lthigh to x-axis <-41.55> NOW;
  turn lleg to x-axis <41.97> NOW;
  turn rleg to x-axis <81.88> NOW;
  turn rfoot to x-axis <-31.27> NOW;
  sleep 70;
  move pelvis to y-axis [-0.15] NOW;
  turn rthigh to x-axis <-18.10> NOW;
  turn lthigh to x-axis <-24.69> NOW;
  turn lleg to x-axis <24.69> NOW;
  turn rleg to x-axis <85.59> NOW;
  turn rfoot to x-axis <-23.00> NOW;
  sleep 50;
  move pelvis to y-axis [0.00] NOW;
  turn rthigh to x-axis <-42.38> NOW;
  turn lthigh to x-axis <5.35> NOW;
  turn lleg to x-axis <6.58> NOW;
  turn lfoot to x-axis <-9.05> NOW;
  turn rleg to x-axis <104.53> NOW;
  turn rfoot to x-axis <0.00> NOW;
  sleep 40;
  move pelvis to y-axis [-0.20] NOW;
  turn rthigh to x-axis <-69.96> NOW;
  turn lthigh to x-axis <14.81> NOW;
  turn lleg to x-axis <15.23> NOW;
  turn lfoot to x-axis <-25.10> NOW;
  turn rleg to x-axis <107.41> NOW;
  sleep 50;
  move pelvis to y-axis [-0.40] NOW;
  turn rthigh to x-axis <-75.31> NOW;
  turn lthigh to x-axis <20.16> NOW;
  turn lleg to x-axis <26.34> NOW;
  turn lfoot to x-axis <-33.74> NOW;
  turn rleg to x-axis <64.61> NOW;
  sleep 70;
  move pelvis to y-axis [-0.55] NOW;
  turn rthigh to x-axis <-56.79> NOW;
  turn lthigh to x-axis <24.27> NOW;
  turn lleg to x-axis <38.68> NOW;
  turn lfoot to x-axis <-38.68> NOW;
  turn rleg to x-axis <56.79> NOW;
  sleep 90;
  move pelvis to y-axis [-0.30] NOW;
  turn rthigh to x-axis <-44.85> NOW;
  turn lthigh to x-axis <5.35> NOW;
  turn lleg to x-axis <67.08> NOW;
  turn rfoot to x-axis <-12.34> NOW;
  sleep 70;
  move pelvis to y-axis [-0.15] NOW;
  turn rthigh to x-axis <-22.63> NOW;
  turn lthigh to x-axis <-12.75> NOW;
  turn lleg to x-axis <79.42> NOW;
  turn lfoot to x-axis <-27.98> NOW;
  turn rleg to x-axis <37.00> NOW;
  turn rfoot to x-axis <-15.64> NOW;
  sleep 50;
  move pelvis to y-axis [0.00] NOW;
  turn rthigh to x-axis <2.88> NOW;
  turn lthigh to x-axis <-42.38> NOW;
  turn lleg to x-axis <90.12> NOW;
  turn lfoot to x-axis <-15.23> NOW;
  turn rleg to x-axis <6.58> NOW;
  turn rfoot to x-axis <-9.46> NOW;
  sleep 40;
  move pelvis to y-axis [-0.20] NOW;
  turn rthigh to x-axis <13.16> NOW;
  turn lthigh to x-axis <-57.20> NOW;
  turn rfoot to x-axis <-19.34> NOW;
  sleep 50;
  move pelvis to y-axis [-0.40] NOW;
  turn rthigh to x-axis <16.46> NOW;
  turn lthigh to x-axis <-67.08> NOW;
  turn lleg to x-axis <55.55> NOW;
  turn lfoot to x-axis <-2.88> NOW;
  turn rleg to x-axis <24.69> NOW;
  turn rfoot to x-axis <-33.33> NOW;
 }

walk()
{ move pelvis to y-axis [-0.55] NOW;
  turn rthigh to x-axis <10.70> NOW;
  turn lthigh to x-axis <-53.49> NOW;
  turn body to y-axis <5.76> NOW;
  turn larm to x-axis <38.68> NOW;
  turn rarm to x-axis <-18.10> NOW;
  turn lleg to x-axis <53.49> NOW;
  turn rleg to x-axis <53.49> NOW;
  turn rfoot to x-axis <-37.86> NOW;
  sleep 90;
  move pelvis to y-axis [-0.30] NOW;
  turn rthigh to x-axis <-10.29> NOW;
  turn lthigh to x-axis <-41.55> NOW;
  turn body to y-axis <3.29> NOW;
  turn larm to x-axis <32.10> NOW;
  turn rarm to x-axis <-11.11> NOW;
  turn lleg to x-axis <41.97> NOW;
  turn rleg to x-axis <81.88> NOW;
  turn rfoot to x-axis <-31.27> NOW;
  sleep 70;
  move pelvis to y-axis [-0.15] NOW;
  turn rthigh to x-axis <-18.10> NOW;
  turn lthigh to x-axis <-24.69> NOW;
  turn body to y-axis <0.00> NOW;
  turn larm to x-axis <27.16> NOW;
  turn rarm to x-axis <-7.41> NOW;
  turn lleg to x-axis <24.69> NOW;
  turn rleg to x-axis <85.59> NOW;
  turn rfoot to x-axis <-23.00> NOW;
  sleep 50;
  move pelvis to y-axis [0.00] NOW;
  turn rthigh to x-axis <-42.38> NOW;
  turn lthigh to x-axis <5.35> NOW;
  turn body to y-axis <-3.29> NOW;
  turn larm to x-axis <8.23> NOW;
  turn rarm to x-axis <9.05> NOW;
  turn lleg to x-axis <6.58> NOW;
  turn lfoot to x-axis <-9.05> NOW;
  turn rleg to x-axis <104.53> NOW;
  turn rfoot to x-axis <0.00> NOW;
  sleep 40;
  move pelvis to y-axis [-0.20] NOW;
  turn rthigh to x-axis <-69.96> NOW;
  turn lthigh to x-axis <14.81> NOW;
  turn body to y-axis <-6.16> NOW;
  turn larm to x-axis <-3.70> NOW;
  turn rarm to x-axis <17.69> NOW;
  turn lleg to x-axis <15.23> NOW;
  turn lfoot to x-axis <-25.10> NOW;
  turn rleg to x-axis <107.41> NOW;
  sleep 50;
  move pelvis to y-axis [-0.40] NOW;
  turn rthigh to x-axis <-75.31> NOW;
  turn lthigh to x-axis <20.16> NOW;
  turn body to y-axis <-8.23> NOW;
  turn larm to x-axis <-10.29> NOW;
  turn rarm to x-axis <25.10> NOW;
  turn lleg to x-axis <26.34> NOW;
  turn lfoot to x-axis <-33.74> NOW;
  turn rleg to x-axis <64.61> NOW;
  sleep 70;
  move pelvis to y-axis [-0.55] NOW;
  turn rthigh to x-axis <-56.79> NOW;
  turn lthigh to x-axis <24.27> NOW;
  turn body to y-axis <-6.16> NOW;
  turn larm to x-axis <-23.87> NOW;
  turn rarm to x-axis <31.27> NOW;
  turn lleg to x-axis <38.68> NOW;
  turn lfoot to x-axis <-38.68> NOW;
  turn rleg to x-axis <56.79> NOW;
  sleep 90;
  move pelvis to y-axis [-0.30] NOW;
  turn rthigh to x-axis <-44.85> NOW;
  turn lthigh to x-axis <5.35> NOW;
  turn body to y-axis <-3.29> NOW;
  turn larm to x-axis <-16.05> NOW;
  turn rarm to x-axis <19.75> NOW;
  turn lleg to x-axis <67.08> NOW;
  turn rfoot to x-axis <-12.34> NOW;
  sleep 70;
  move pelvis to y-axis [-0.15] NOW;
  turn rthigh to x-axis <-22.63> NOW;
  turn lthigh to x-axis <-12.75> NOW;
  turn body to y-axis <0.00> NOW;
  turn larm to x-axis <-1.64> NOW;
  turn rarm to x-axis <10.29> NOW;
  turn lleg to x-axis <79.42> NOW;
  turn lfoot to x-axis <-27.98> NOW;
  turn rleg to x-axis <37.00> NOW;
  turn rfoot to x-axis <-15.64> NOW;
  sleep 50;
  move pelvis to y-axis [0.00] NOW;
  turn rthigh to x-axis <2.88> NOW;
  turn lthigh to x-axis <-42.38> NOW;
  turn body to y-axis <3.29> NOW;
  turn larm to x-axis <11.52> NOW;
  turn rarm to x-axis <1.23> NOW;
  turn lleg to x-axis <90.12> NOW;
  turn lfoot to x-axis <-15.23> NOW;
  turn rleg to x-axis <6.58> NOW;
  turn rfoot to x-axis <-9.46> NOW;
  sleep 40;
  move pelvis to y-axis [-0.20] NOW;
  turn rthigh to x-axis <13.16> NOW;
  turn lthigh to x-axis <-57.20> NOW;
  turn body to y-axis <6.16> NOW;
  turn larm to x-axis <21.40> NOW;
  turn rarm to x-axis <-6.99> NOW;
  turn rfoot to x-axis <-19.34> NOW;
  sleep 50;
  move pelvis to y-axis [-0.40] NOW;
  turn rthigh to x-axis <16.46> NOW;
  turn lthigh to x-axis <-67.08> NOW;
  turn body to y-axis <8.23> NOW;
  turn larm to x-axis <25.10> NOW;
  turn rarm to x-axis <-12.34> NOW;
  turn lleg to x-axis <55.55> NOW;
  turn lfoot to x-axis <-2.88> NOW;
  turn rleg to x-axis <24.69> NOW;
  turn rfoot to x-axis <-33.33> NOW;
 }

MotionControl()
{ var moving, aiming, just_moved;
  just_moved = TRUE;
  while (TRUE)
   { moving = bMoving;
     aiming = bAiming;
     if (moving)
      { if (aiming)
         { bCanAim = TRUE;
           call-script walklegs();
          }
        if (NOT aiming)
         { bCanAim = FALSE;
           call-script walk();
          }
        just_moved = TRUE;
        sleep 70;
       }
     if (NOT moving)
      { bCanAim = TRUE;
        if (just_moved)
         { move pelvis to y-axis 0 speed [1];
           turn rthigh to x-axis 0 speed <200>;
           turn rleg to x-axis 0 speed <200>;
           turn rfoot to x-axis 0 speed <200>;
           turn lthigh to x-axis 0 speed <200>;
           turn lleg to x-axis 0 speed <200>;
           turn lfoot to x-axis 0 speed <200>;
           if (NOT aiming)
            { turn body to y-axis 0 speed <90>;
              turn rarm to x-axis <0> speed <200>;
              turn larm to x-axis <0> speed <200>;
             }
           just_moved = FALSE;
          }
        sleep 100;
       }
    }
 }

Create()
{ hide rflare;
  hide lflare;
  bMoving = FALSE;
  bAiming = FALSE;
  bCanAim = TRUE;
  gun = 0;
  restore_delay = 3000;
  start-script MotionControl();
  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

StartMoving()
{ bMoving = TRUE;
 }

StopMoving()
{ bMoving = FALSE;
 }

SweetSpot(piecenum)
{ piecenum=body;
 }

RestoreAfterDelay()
{ sleep restore_delay;
  turn body to y-axis 0 speed <90>;
  turn rarm to x-axis <0> speed <45>;
  turn larm to x-axis <0> speed <45>;
  turn rlowarm to x-axis <0> speed <45>;
  turn llowarm to x-axis <0> speed <45>;
  wait-for-turn body around y-axis;
  wait-for-turn rarm around x-axis;
  wait-for-turn larm around x-axis;
  bAiming = FALSE;
 }

AimFromPrimary(piecenum)
{ piecenum=rarm;
  if (gun == 1)
   { piecenum=larm; }
 }

QueryPrimary(piecenum)
{ piecenum=rflare;
  if (gun == 1)
   { piecenum=lflare; }
 }

FirePrimary()
{ if (gun == 0)
   { show rflare;
     sleep 100;
     hide rflare;
     gun = 1;
     return( 0 );
    }
  if (gun == 1)
   { show lflare;
     sleep 100;
     hide lflare;
     gun = 0;
    }
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM;
  set-signal-mask SIG_AIM;
  bAiming = TRUE;
  while (NOT bCanAim)
   { sleep 100; }
  turn body to y-axis heading speed <150>;
  turn larm to x-axis <-45>  speed <200>;
  turn rarm to x-axis <-45>  speed <200>;
  turn llowarm to x-axis <-15>  speed <200>;
  turn rlowarm to x-axis <-15>  speed <200>;
  
  wait-for-turn body around y-axis;
  wait-for-turn larm around x-axis;
  wait-for-turn rarm around x-axis;
  start-script RestoreAfterDelay();
  return( TRUE );
 }


Killed( severity, corpsetype )
{ hide rflare;
  hide lflare;
  explode lfoot type BITMAPONLY | BITMAP1;
  explode lleg type BITMAPONLY | BITMAP2;
  explode lthigh type BITMAPONLY | BITMAP3;
  explode rfoot type BITMAPONLY | BITMAP2;
  explode rleg type BITMAPONLY | BITMAP1;
  explode rthigh type BITMAPONLY | BITMAP3;
  if (severity <= 25)
   { corpsetype = 1;
     explode body type BITMAPONLY | BITMAP4;
     return( 0 );
    }
  explode larm type FALL | BITMAP3;
  explode rarm type FALL | BITMAP3;
  explode llowarm type FALL | BITMAP2;
  explode rlowarm type FALL | BITMAP2;
  if (severity <= 50)
   { corpsetype = 2;
     explode body type SHATTER | BITMAP3;
     return( 0 );
    }
  corpsetype = 3;
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP3;
  return( 0 );
 }
