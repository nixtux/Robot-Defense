//define TA

piece base,body,turret,nano1,nano2,spray1,spray2;
piece legl1,legl2,legl3,legl4,legr1,legr2,legr3,legr4;

static-var buildheading,spray,h1,h2,h3,bmoving,bLevel;

#define SMOKEPIECE1 body
#define SIGNALSTOP 2

#include "sfxtype.h"
#include "exptype.h"
#include "smokeunit.h"

HitByWeapon(anglex,anglez)
 { var healthpercent;
   healthpercent = get HEALTH;
   if (healthpercent <= 50)
    { if (h1 == 0)
       { h1 = 1;
         hide legl2;
         explode legl2 type FALL | SMOKE | BITMAP2;;
        }
     }
   if (healthpercent <= 30)
    { if (h2 == 0)
       { h2 = 1;
         hide legr3;
         explode legr3 type FALL | SMOKE | BITMAP2;;
        }
     }
   if (healthpercent <= 15)
    { if (h3 == 0)
       { h3 = 1;
         hide legr1;
         explode legr1 type FALL | SMOKE | BITMAP2;
        }
     }
  }


walk()
 { WHILE (bMoving )
    { IF (bMoving )
       { TURN legr4 to y-axis <43.78> NOW;
         TURN legr4 to y-axis <0> SPEED <218.96>;
         TURN legr4 to z-axis <0.60> NOW;
         TURN legr4 to z-axis <0> SPEED <3.03>;
         TURN legr3 to z-axis <0> NOW;
         TURN legr3 to z-axis <31.00> SPEED <155.10>;
         TURN legr2 to y-axis <43.78> NOW;
         TURN legr2 to y-axis <0> SPEED <218.96>;
         TURN legr2 to z-axis <0.60> NOW;
         TURN legr2 to z-axis <0> SPEED <3.03>;
         TURN legr1 to y-axis <34.66> NOW;
         TURN legr1 to y-axis <34.05> SPEED <3.03>;
         TURN legr1 to z-axis <31.61> NOW;
         TURN legr1 to z-axis <0.60> SPEED <155.10>;
         TURN legl4 to y-axis <-40.13> NOW;
         TURN legl4 to y-axis <-40.13> SPEED <0>;
         TURN legl4 to z-axis <-31.00> NOW;
         TURN legl4 to z-axis <-0.60> SPEED <152.06>;
         TURN legl3 to y-axis <-37.08> NOW;
         TURN legl3 to y-axis <0> SPEED <185.51>;
         TURN legl3 to z-axis <0> NOW;
         TURN legl3 to z-axis <0> SPEED <0>;
         TURN legl2 to y-axis <-40.13> NOW;
         TURN legl2 to y-axis <-40.13> SPEED <0>;
         TURN legl2 to z-axis <-31.00> NOW;
         TURN legl2 to z-axis <-0.60> SPEED <152.06>;
         TURN legl1 to y-axis <0> NOW;
         TURN legl1 to y-axis <-30.40> SPEED <152.06>;
         TURN legl1 to z-axis <-45.00> NOW;
         SLEEP 200;
        }
      IF (bMoving )
       { TURN legr4 to z-axis <31.61> SPEED <158.14>;
         TURN legr3 to y-axis <34.66> SPEED <173.35>;
         TURN legr3 to z-axis <31.00> SPEED <0>;
         TURN legr2 to z-axis <31.61> SPEED <158.14>;
         TURN legr1 to y-axis <0> SPEED <170.30>;
         TURN legr1 to z-axis <0> SPEED <3.03>;
         TURN legl4 to y-axis <0> SPEED <200.71>;
         TURN legl3 to z-axis <-31.00> SPEED <155.10>;
         TURN legl2 to y-axis <0> SPEED <200.71>;
         TURN legl1 to z-axis <2.42> SPEED <237.21>;
         SLEEP 200;
        }
      IF (bMoving )
       { TURN legr4 to y-axis <55.94> SPEED <279.79>;
         TURN legr4 to z-axis <31.00> SPEED <3.03>;
         TURN legr3 to y-axis <34.66> SPEED <0>;
         TURN legr3 to z-axis <0.60> SPEED <152.06>;
         TURN legr2 to y-axis <55.94> SPEED <279.79>;
         TURN legr2 to z-axis <31.00> SPEED <3.03>;
         TURN legr1 to z-axis <31.61> SPEED <158.14>;
         TURN legl4 to y-axis <-0.60> SPEED <3.03>;
         TURN legl4 to z-axis <-31.00> SPEED <152.06>;
         TURN legl3 to y-axis <-31.61> SPEED <158.14>;
         TURN legl3 to z-axis <-31.00> SPEED <0>;
         TURN legl2 to y-axis <-0.60> SPEED <3.03>;
         TURN legl2 to z-axis <-31.00> SPEED <152.06>;
         TURN legl1 to y-axis <3.03> SPEED <167.26>; 
         SLEEP 200;
        }
      TURN legr4 to y-axis <43.78> SPEED <60.82>;
      TURN legr4 to z-axis <0.60> SPEED <152.06>;
      TURN legr3 to y-axis <0> SPEED <173.35>;
      TURN legr3 to z-axis <0> SPEED <3.03>;
      TURN legr2 to y-axis <43.78> SPEED <60.82>;
      TURN legr2 to z-axis <0.60> SPEED <152.06>;
      TURN legr1 to y-axis <34.66> SPEED <173.35>;
      TURN legr1 to z-axis <31.61> SPEED <0>;
      TURN legl4 to y-axis <-40.13> SPEED <197.68>;
      TURN legl4 to z-axis <-31.00> SPEED <0>;
      TURN legl3 to y-axis <-37.08> SPEED <27.36>;
      TURN legl3 to z-axis <0> SPEED <155.10>;
      TURN legl2 to y-axis <-40.13> SPEED <197.68>;
      TURN legl2 to z-axis <-31.00> SPEED <0>;
      TURN legl1 to y-axis <0> SPEED <15.20>;
      TURN legl1 to z-axis <-45.00> SPEED <237.21>;
      SLEEP 200;
     }

   TURN legr1 to y-axis <0> SPEED <60>;
   TURN legr1 to z-axis <0> SPEED <60>;
   TURN legr2 to y-axis <0> SPEED <60>;
   TURN legr2 to z-axis <0> SPEED <60>;
   TURN legr3 to y-axis <0> SPEED <60>;
   TURN legr3 to z-axis <0> SPEED <60>;
   TURN legr4 to y-axis <0> SPEED <60>;
   TURN legr4 to z-axis <0> SPEED <60>;
   TURN legl1 to y-axis <0> SPEED <60>;
   TURN legl1 to z-axis <0> SPEED <60>;
   TURN legl2 to y-axis <0> SPEED <60>;
   TURN legl2 to z-axis <0> SPEED <60>;
   TURN legl3 to y-axis <0> SPEED <60>;
   TURN legl3 to z-axis <0> SPEED <60>;
   TURN legl4 to y-axis <0> SPEED <60>;
   TURN legl4 to z-axis <0> SPEED <60>;
  }



MotionControl()
 { var moving;
   while (TRUE)
    { moving = bMoving;
      if (moving)
       { call-script walk();
        }
      if (NOT moving)
       { sleep 100;
        }
     }
  }

Create()
 { buildheading=0;
   h1=0;
   h2=0;
   h3=0;
  spray=0;
   bmoving=0;
   start-script MotionControl();
   start-script SmokeUnit();
  }

StartMoving()
 { bMoving = TRUE;
  }

StopMoving()
 { bMoving = FALSE;
  }

setSFXoccupy(level)
 { bLevel=level;
  }

Activate()
 { signal SIGNALSTOP;
   set-signal-mask SIGNALSTOP;
      move nano1 to y-axis [2.5] speed [8];
      move nano2 to y-axis [2.5] speed [8];
      wait-for-move nano1 along y-axis;

      move nano1 to x-axis [1] speed [8];
      move nano2 to x-axis [-1] speed [8];
      wait-for-move nano1 along x-axis;

  turn turret to y-axis buildheading speed <160>;
  wait-for-turn turret around y-axis;

   set INBUILDSTANCE to 1;
  }

Deactivate()
 { signal SIGNALSTOP;
   set-signal-mask SIGNALSTOP;
   set INBUILDSTANCE to 0;
	
     turn turret to y-axis <0> speed <160>;
     wait-for-turn turret around y-axis;


      move nano1 to x-axis [0] speed [8];
      move nano2 to x-axis [0] speed [8];
      wait-for-move nano1 along x-axis;



      move nano1 to y-axis [0] speed [8];
      move nano2 to y-axis [0] speed [8];
      wait-for-move nano1 along y-axis;
  }

TargetHeading(heading)
 { buildheading = 0 - heading;
  }

QueryNanoPiece(piecenum)
 { 
  if (spray == 0)
	{ piecenum=nano1; }
  if (spray == 1)
	{ piecenum=nano2; }
  spray = !spray;
  }

StartBuilding(heading)
 { buildheading = heading;
   call-script Activate();
  }

StopBuilding()
 { call-script Deactivate();
  }

SweetSpot(piecenum)
 { piecenum=body;
  }

Killed(severity,corpsetype)
 { corpsetype = 3;
   if (severity <= 50)
    { corpsetype = 2;
     }
   if (severity <= 25)
    { corpsetype = 1;
     }
   explode body type BITMAPONLY | BITMAP3;
   explode legl3 type FALL | SMOKE | EXPLODE_ON_HIT;
   explode legl4 type FALL | SMOKE | EXPLODE_ON_HIT;
   explode legr1 type FALL | SMOKE | EXPLODE_ON_HIT;
   explode legr3 type FALL | SMOKE | EXPLODE_ON_HIT;
   explode nano1 type FALL | SMOKE | EXPLODE_ON_HIT;
   explode nano2 type FALL | SMOKE | EXPLODE_ON_HIT;
  }
