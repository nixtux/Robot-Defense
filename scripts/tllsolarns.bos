// Arm Solar Plant

piece base, body, dish1, dish2, dish3, dish4, wheel, arm;

#define SMOKEPIECE1 base
#define EXPLODEPIECE2 dish2
#define EXPLODEPIECE3 dish3

#include "StateChg.h"
#include "explodesolarNS.h"
#include "exptype.h"

Tangue()
	{
	While (TRUE)
		{
		turn body to x-axis <2> SPEED <0.5>;
		turn body to z-axis <2> SPEED <0.5>;
		WAIT-FOR-TURN body around x-axis;
		turn body to x-axis <-2> SPEED <0.5>;
		turn body to z-axis <-2> SPEED <0.5>;
		WAIT-FOR-TURN body around x-axis;
		turn body to x-axis <0> SPEED <0.5>;
		turn body to z-axis <0> SPEED <0.5>;
		}
	}

Go()
	{
	set ARMORED to FALSE;
	spin wheel around y-axis speed <35>;

	turn dish1 to y-axis <180> speed <180>;
	turn dish2 to y-axis <180> speed <180>;
	turn dish3 to y-axis <180> speed <180>;
	turn dish4 to y-axis <180> speed <180>;

	wait-for-turn dish1 around y-axis;
	wait-for-turn dish2 around y-axis;
	wait-for-turn dish3 around y-axis;
	wait-for-turn dish4 around y-axis;

	turn dish1 to x-axis <-60> speed <85>;
	turn dish3 to x-axis <60> speed <85>;
	turn dish2 to z-axis <60> speed <85>;
	turn dish4 to z-axis <-60> speed <85>;
	}

Stop()
	{
	turn dish1 to x-axis <0> speed <105>;
	turn dish3 to x-axis <0> speed <105>;
	turn dish2 to z-axis <0> speed <105>;
	turn dish4 to z-axis <0> speed <105>;

	wait-for-turn dish1 around x-axis;
	wait-for-turn dish2 around x-axis;
	wait-for-turn dish3 around z-axis;
	wait-for-turn dish4 around z-axis;

	turn dish1 to y-axis <0> speed <250>;
	turn dish2 to y-axis <0> speed <250>;
	turn dish3 to y-axis <0> speed <250>;
	turn dish4 to y-axis <0> speed <250>;
	set ARMORED to TRUE;
	}

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"

Create()
	{
	DONT-CACHE body;
	DONT-CACHE arm;
	DONT-CACHE wheel;
	DONT-CACHE dish1;
	DONT-CACHE dish2;
	DONT-CACHE dish3;
	DONT-CACHE dish4;

	turn body to y-axis <-225> NOW;

	call-script InitState();
	start-script SmokeUnit();
	while(get BUILD_PERCENT_LEFT)
		{
		sleep 1000;
		}

	start-script Tangue();
	}

Activate()
	{
	start-script RequestState( ACTIVE );
	}

Deactivate()
	{
	start-script RequestState( INACTIVE );
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode dish1 type	BITMAPONLY | BITMAP1;
		explode dish2 type	BITMAPONLY | BITMAP2;
		explode dish3 type	BITMAPONLY | BITMAP3;
		explode dish4 type	BITMAPONLY | BITMAP4;
		explode body type	BITMAPONLY | BITMAP5;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode dish1 type	FALL | BITMAP1;
		explode dish2 type	FALL | BITMAP2;
		explode dish3 type	FALL | BITMAP3;
		explode dish4 type	FALL | BITMAP4;
		explode body type	BITMAPONLY | BITMAP5;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode dish1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode dish2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode dish3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode dish4 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode body type	BITMAPONLY | BITMAP5;
		return( 0 );
		}

	corpsetype = 3;
	explode dish1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode dish2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode dish3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode dish4 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode body type	SHATTER | EXPLODE_ON_HIT | BITMAP5;
	return( 0 );
	}
