// Arm Patrol Boat

piece base,body,turret,sleeve,barrel1,barrel2,flare1,flare2, flare3, wake1,wake2,wake3;

static-var fire,restore_delay;

#define SIG_AIM1 2
#define SIG_WAKE 2
#define SMOKEPIECE1 turret
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
{ hide flare1;
  hide flare2;
  fire=1;
  restore_delay=3000;
  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay()
{ sleep restore_delay;
  turn turret to y-axis 0 speed <35>;
  turn sleeve to x-axis 0 speed <15>;
 }

StartMoving()
{ signal SIG_WAKE;
  set-signal-mask SIG_WAKE;
  while (TRUE)
   { emit-sfx SFXTYPE_WAKE1 from wake1;
     emit-sfx SFXTYPE_WAKE1 from wake2;
     emit-sfx SFXTYPE_WAKE1 from wake3;
     sleep 200;
    }
 }

StopMoving()
{ signal SIG_WAKE;
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM1;
  set-signal-mask SIG_AIM1;
  turn turret to y-axis heading speed <145>;
  turn sleeve to x-axis (0-pitch) speed <95>;
  wait-for-turn turret around y-axis;
  wait-for-turn sleeve around x-axis;
  start-script RestoreAfterDelay();	
  return(TRUE);
 }

AimSecondary(heading,pitch)
{ return(TRUE);
 }

FirePrimary()
{ if (fire==1)
   { move barrel1 to z-axis [-1.5] speed [500];
     show flare1;
     wait-for-move barrel1 along z-axis;
     move barrel1 to z-axis [0] speed [3.0];
     sleep 150; hide flare1; fire = 2;
     return( 0 );
    }
  move barrel2 to z-axis [-1.5] speed [500];
  show flare2;
  wait-for-move barrel2 along z-axis;
  move barrel2 to z-axis [0] speed [3.0];
  sleep 150; hide flare2; fire = 1;
}

FireSecondary()
{
  }

AimFromPrimary(piecenum)
{ piecenum=turret;
 }

QueryPrimary(piecenum)
{ piecenum=flare2; 
  if (fire==1) { piecenum=flare1; }
 }

QuerySecondary(piecenum)
{ piecenum=flare3;
 }

SweetSpot(piecenum)
{ piecenum=turret;
 }

Killed( severity, corpsetype )
{ hide flare1;
  hide flare2;
  explode base type BITMAPONLY | BITMAP3;
  explode body type BITMAPONLY | BITMAP4;
  if (severity < 25)
   { corpsetype = 1;
     return( 0 );
    }
  explode barrel1 type FALL | EXPLODE_ON_HIT | BITMAP1;
  explode barrel1 type FALL | EXPLODE_ON_HIT | BITMAP1;
  explode turret type FALL | EXPLODE_ON_HIT | BITMAP2;
  explode turret type SHATTER | BITMAP1;
  if (severity < 50)
   { corpsetype = 2;
     return( 0 );
    }
  explode sleeve type FALL | EXPLODE_ON_HIT | BITMAP1;
  explode sleeve type SHATTER | EXPLODE_ON_HIT | BITMAP2;
  explode flare1 type BITMAPONLY | BITMAP4;
  explode sleeve type BITMAPONLY | BITMAP5;
  corpsetype = 3;
 }
