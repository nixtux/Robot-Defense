//define TA
piece base ,body ,arm,door1,door2, flare1,flare2,flare3,wakes ,wake1 ,wake2 ,wake3 ,wake4 ,wake5 ,wake6 ,wake7 ,wake8 ;
static-var bLevel_0 ,restore_delay,ok,gun_0 ;
	
#define SIG_NUM1	2
#define SIG_NUM2	4
#define SMOKEPIECE base

#include "StateChg.h"

Go()
{ dont-cache arm;
  turn door1 to x-axis <55> speed <80>;
  turn door2 to x-axis <-80> speed <100>;
  wait-for-turn door2 around x-axis;
  ok=1;
 }

Stop()
{ 
  ok=0;
  turn door1 to x-axis <0> speed <80>;
  turn door2 to x-axis <0> speed <100>;
  wait-for-turn door1 around x-axis;
  cache arm;
 }

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"
#include "SmokeUnit.h"
#include "Rockunit.h"
Create()
	{
		HIDE flare1;
		ok=0;
		gun_0=0;
		restore_delay = 3000;
		START-SCRIPT SmokeUnit();
		  call-script InitState();
	}


StartMoving()
		{
			SIGNAL SIG_NUM2;
			SET-SIGNAL-MASK SIG_NUM2;
			var fl, flb;
			fl=3; //Wake2;
			flb=4; //ReverseWake1;
			While (TRUE)
			{
			if ( bLevel_0 ==1 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			if ( bLevel_0 ==2 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			if ( bLevel_0 ==3 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			SLEEP 300;
			}
		}
StopMoving()
	{
	}
setSFXoccupy(level)
	{
		bLevel_0 = level;
	}

Activate()
{ start-script RequestState(0);
 }

Deactivate()
{ start-script RequestState(1);
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay()
{ set-signal-mask SIG_NUM1;
  sleep restore_delay;
  set-signal-mask 0;
  start-script RequestState(1);
}

AimPrimary(heading, pitch)
{ start-script RequestState(0);
  signal SIG_NUM1;
  set-signal-mask SIG_NUM1;
  while( !ok )
  { sleep 200;
    start-script RequestState(0);
   }
  start-script RestoreAfterDelay();
  return (1);
}

FirePrimary()
{ 
if ( gun_0 == 0 ) { show flare1; sleep 150; hide flare1; }
if ( gun_0 == 1 ) { show flare2; sleep 150; hide flare2; }
if ( gun_0 == 2 ) { show flare3; sleep 150; hide flare3; }
gun_0 = gun_0 +1;
if ( gun_0 >= 4 ) { gun_0=0; }
 }

QueryPrimary(piecenum)
{ 
if ( gun_0 == 0 ) { piecenum = flare1; }
if ( gun_0 == 1 ) { piecenum = flare2; }
if ( gun_0 == 2 ) { piecenum = flare3; }
 }

SweetSpot(piecenum)
	{
		piecenum = body;
	}
Killed(severity,corpsetype)
	{
		HIDE flare1;
		IF (severity <= 25 )
			{
			corpsetype = 1 ;
			EXPLODE  arm type  	BITMAPONLY | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  door1 type  	BITMAPONLY | BITMAP3;
			EXPLODE  flare1 type  	BITMAPONLY | BITMAP4;
			RETURN ( 0 );
			}
		IF (severity <= 50 )
			{
			corpsetype = 2 ;
			EXPLODE  arm type  	FALL | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  door1 type  	FALL | BITMAP3;
			EXPLODE  flare3 type  	SHATTER | BITMAP4;
			RETURN ( 0 );
			}
		IF (severity <= 99 )
			{
			corpsetype = 3 ;
			EXPLODE  door2 type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  flare1 type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
			EXPLODE  arm type  	SHATTER | BITMAP4;
			RETURN ( 0 );
			}
		corpsetype = 3 ;
		EXPLODE  arm type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		EXPLODE  body type  	SHATTER | EXPLODE_ON_HIT | BITMAP2;
		EXPLODE  door2 type  	SHATTER | EXPLODE_ON_HIT | BITMAP4;
		EXPLODE  flare1 type  	SHATTER | EXPLODE_ON_HIT | BITMAP4;
	}
