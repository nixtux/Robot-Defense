#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare, turret, gunbase, pelvis, lleg, rleg, ground;

static-var  restore_delay;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM			4

#define SMOKEPIECE1 turret


walk()
{
	while( TRUE )
	{
		if( TRUE )
		{
			move pelvis to y-axis [0.0] now;
			move lleg to y-axis [0.0] now;
			move lleg to z-axis [1.8] now;
			move rleg to y-axis [0.0] now;
			move rleg to z-axis [-1.6] now;
			turn pelvis to x-axis <6.0> now;
			turn lleg to x-axis <-6.0> now;
			turn rleg to x-axis <0.0> now;
			sleep 60;
		}
		if( TRUE )
		{
			move pelvis to y-axis [-0.5] now;
			move lleg to y-axis [0.5] now;
			move rleg to y-axis [0.5] now;
			turn pelvis to x-axis <4.9> now;
			turn lleg to x-axis <-4.9> now;
			turn rleg to x-axis <1.1> now;
			sleep 30;
		}
		if( TRUE )
		{
			move pelvis to y-axis [-0.3] now;
			move lleg to y-axis [0.3] now;
			move rleg to y-axis [0.3] now;
			turn pelvis to x-axis <2.1> now;
			turn lleg to x-axis <-2.1> now;
			turn rleg to x-axis <2.8> now;
			sleep 20;
		}
		if( TRUE )
		{
			move pelvis to y-axis [-0.1] now;
			move lleg to y-axis [0.1] now;
			move rleg to y-axis [0.1] now;
			turn pelvis to x-axis <1.1> now;
			turn lleg to x-axis <-1.0> now;
			turn rleg to x-axis <3.2> now;
			sleep 10;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.0] now;
			move lleg to y-axis [0.0] now;
			move rleg to y-axis [1.1] now;
			move rleg to z-axis [-1.9] now;
			turn pelvis to x-axis <0.0> now;
			turn lleg to x-axis <0.0> now;
			turn rleg to x-axis <0.0> now;
			sleep 60;
		}
		if( TRUE )
		{
			move lleg to z-axis [1.0] now;
			move rleg to z-axis [-0.3] now;
			sleep 60;
		}
		if( TRUE )
		{
			move lleg to y-axis [0.0] now;
			move lleg to z-axis [0.0] now;
			move rleg to z-axis [0.0] now;
			turn pelvis to x-axis <0.0> now;
			turn lleg to x-axis <0.0> now;
			turn rleg to x-axis <0.0> now;
			sleep 60;
		}
		if( TRUE )
		{
			move lleg to z-axis [-0.6] now;
			move rleg to z-axis [0.8] now;
			turn rleg to x-axis <-9.1> now;
			sleep 100;
		}
		if( TRUE )
		{
			move lleg to z-axis [-1.2] now;
			move rleg to y-axis [0.0] now;
			turn pelvis to x-axis <6.0> now;
			turn rleg to x-axis <-6.0> now;
			sleep 60;
		}
		if( TRUE )
		{
			move pelvis to y-axis [-0.5] now;
			move lleg to y-axis [0.5] now;
			move rleg to y-axis [0.5] now;
			turn pelvis to x-axis <4.6> now;
			turn lleg to x-axis <0.7> now;
			turn rleg to x-axis <-4.9> now;
			sleep 30;
		}
		if( TRUE )
		{
			move pelvis to y-axis [-0.3] now;
			move lleg to y-axis [0.3] now;
			move rleg to y-axis [0.3] now;
			turn pelvis to x-axis <2.1> now;
			turn lleg to x-axis <2.8> now;
			turn rleg to x-axis <-2.1> now;
			sleep 20;
		}
		if( TRUE )
		{
			move pelvis to y-axis [-0.1] now;
			move lleg to y-axis [0.1] now;
			move rleg to y-axis [0.1] now;
			turn pelvis to x-axis <1.1> now;
			turn lleg to x-axis <2.5> now;
			turn rleg to x-axis <-1.0> now;
			sleep 10;
		}
		if( TRUE )
		{
			move lleg to y-axis [1.1] now;
			move lleg to z-axis [-1.6] now;
			move rleg to y-axis [0.1] now;
			turn pelvis to x-axis <0.0> now;
			turn lleg to x-axis <0.0> now;
			turn rleg to x-axis <0.0> now;
			sleep 60;
		}
		if( TRUE )
		{
			move lleg to z-axis [-0.7] now;
			move rleg to z-axis [0.2] now;
			sleep 60;
		}
		if( TRUE )
		{
			move lleg to z-axis [0.5] now;
			move rleg to y-axis [0.0] now;
			move rleg to z-axis [-0.3] now;
			turn rleg to x-axis <0.0> now;
			sleep 60;
		}
		move lleg to z-axis [1.0] now;
		move rleg to y-axis [0.0] now;
		move rleg to z-axis [-1.3] now;
		turn lleg to x-axis <-10.2> now;
		turn rleg to x-axis <0.0> now;
		sleep 100;
	}
}
#include "SmokeUnit.h"

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
}

Create()
{
	hide flare;
	restore_delay = 3000;
	start-script StopMoving();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

SweetSpot(piecenum)
{
	piecenum = pelvis;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0.0> speed <90.0>;
	turn gunbase to x-axis <0.0> speed <45.0>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <225.1>;
	turn gunbase to x-axis <0.0> - pitch speed <150.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn gunbase around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	show flare;
	sleep 50;
	hide flare;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode flare type BITMAPONLY | BITMAP1;
		explode ground type BITMAPONLY | BITMAP3;
		explode gunbase type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rleg type BITMAPONLY | BITMAP4;
		explode turret type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP3;
		explode gunbase type BITMAPONLY | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rleg type FALL | BITMAP4;
		explode turret type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode gunbase type BITMAPONLY | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode turret type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode gunbase type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type BITMAPONLY | BITMAP3;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode turret type BITMAPONLY | BITMAP5;
}
