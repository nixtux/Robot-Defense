#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, arm1, arm2, arm3, arm4, flare, barrel, turret, lights, box1, box2, box3, box4;
static-var  gun_1, restore_delay;

// Signal definitions
#define SIG_AIM				2

#define SMOKEPIECE1 base

#include "StateChg.h"

activatescr()
{

	if( TRUE )
	{	
	turn arm1 to z-axis <55> speed <50>;
	turn arm2 to z-axis <-55> speed <50>;
	turn arm3 to x-axis <-55> speed <50>;
	turn arm4 to x-axis <55> speed <50>;
	turn box1 to z-axis <85> speed <50>;
	turn box2 to z-axis <-85> speed <50>;
	turn box3 to x-axis <-85> speed <50>;
	turn box4 to x-axis <85> speed <50>;

	SLEEP 1200;
	}
	if( TRUE )
	{
	move barrel to y-axis [8] speed [5];
	sleep 1000;
	}
	if( TRUE )
	{
	spin barrel around y-axis speed <10>;
	SLEEP 250;
	spin barrel around y-axis speed <40>;
	SLEEP 250;
	spin barrel around y-axis speed <60>;
	SLEEP 250;
	spin barrel around y-axis speed <90>;
	SLEEP 250;
	spin barrel around y-axis speed <120>;
	SLEEP 250;
	spin barrel around y-axis speed <150>;
	SLEEP 250;
	spin barrel around y-axis speed <190>;
	SLEEP 250;
	spin barrel around y-axis speed <250>;
	SLEEP 250;
	spin barrel around y-axis speed <370>;
	SLEEP 250;
	spin barrel around y-axis speed <500>;
	SLEEP 250;

	}
SLEEP 500;
}

deactivatescr()
{
	if( TRUE )
	{
	spin barrel around y-axis speed <400>;
	SLEEP 550;
	spin barrel around y-axis speed <320>;
	SLEEP 550;
	spin barrel around y-axis speed <200>;
	SLEEP 750;
	turn barrel to y-axis <0> speed <90>;
	SLEEP 1000;
	}
	if( TRUE )
	{
	move barrel to y-axis [0] speed [5];
	sleep 1000;
	}
	if( TRUE )
	{
	turn arm3 to x-axis <0> speed <50>;
	turn arm4 to x-axis <0> speed <50>;
	turn arm1 to z-axis <0> speed <50>;
	turn arm2 to z-axis <0> speed <50>;
	turn box3 to x-axis <0> speed <50>;
	turn box4 to x-axis <0> speed <50>;
	turn box1 to z-axis <0> speed <50>;
	turn box2 to z-axis <0> speed <50>;
	
	}
}

#include "SmokeUnit.h"

Go()
{
	call-script activatescr();
	gun_1=1;
}

Stop()
{
	gun_1=0;
	sleep 4000;
	call-script deactivatescr();
}
#define ACTIVATECMD		call-script Go();
#define DEACTIVATECMD		call-script Stop();
#include "StateChg.h"

Create()
{
	call-script InitState();
	gun_1 = 0;
	dont-shade turret;
	dont-shade lights;
	dont-shade arm1;
	dont-shade arm2;
	dont-shade arm3;
	dont-shade arm4;
	dont-shade box1;
	dont-shade box2;
	dont-shade box3;
	dont-shade box4;

	dont-cache flare;
	dont-cache lights;
	dont-cache arm1;
	dont-cache arm2;
	dont-cache arm3;
	dont-cache arm4;
	dont-cache barrel;

	
	hide flare;
	
	turn lights to y-axis <45> NOW;
	
	restore_delay = 3000;
	start-script SmokeUnit();
}

Activate()
{

	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);

}

SetMaxReloadTime(time)
{
	restore_delay = time * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !gun_1 )
	{
		sleep 1000;
		start-script RequestState(0);
	}
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	gun_1=0;

	move barrel to y-axis [0] speed [400];

	show flare;
	SLEEP 250;
	hide flare;
	
	move barrel to y-axis [7] speed [8];
	
	start-script RequestState(1);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode arm1 type BITMAPONLY | BITMAP5;
		explode arm2 type BITMAPONLY | BITMAP1;
		explode arm3 type BITMAPONLY | BITMAP2;
		explode arm4 type BITMAPONLY | BITMAP3;
		explode barrel type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type SHATTER | BITMAP2;
		explode arm1 type FALL | BITMAP5;
		explode arm2 type FALL | BITMAP1;
		explode arm3 type FALL | BITMAP2;
		explode arm4 type FALL | BITMAP3;
		explode barrel type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP2;
		explode arm1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode arm2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode arm3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode arm4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode barrel type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode arm1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode arm2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode arm3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode arm4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode barrel type BITMAPONLY | BITMAP2;
}
