
piece base,body,pad,light,arm1,arm2,nano1,nano2,spray1,spray2,spray3;

static-var stage,spray;

#define	SIG_ACTIVATE 2
#define SMOKEPIECE1 pad
#define ANIM_VARIABLE TRUE

#include "StateChg.h"
#include "smokeunit.h"
#include "EXPtype.h"
#include "yard.h"

activatescr()
 { 


      dont-cache arm1;
      dont-cache arm2;
      dont-cache nano1;
      dont-cache nano2;
      dont-cache light;
      turn arm1 to z-axis <-110> speed <30>;
      turn arm2 to z-axis <110> speed <30>;
      turn nano1 to z-axis <130> speed <37>;
      turn nano2 to z-axis <-130> speed <37>;
      wait-for-turn nano1 around z-axis;
 
  }

deactivatescr()
 { 
      turn nano1 to z-axis <0> speed <50>;
      turn nano2 to z-axis <0> speed <50>;
      turn arm1 to z-axis <0> speed <40>;
      turn arm2 to z-axis <0> speed <40>;
      wait-for-turn arm1 around z-axis;

      cache arm1;
      cache arm2;
      cache nano1;
      cache nano2;
  }


Go()
 { call-script activatescr();
   call-script OpenYard();
   set INBUILDSTANCE to TRUE;
  }

Stop()
 { set INBUILDSTANCE to FALSE;
   call-script CloseYard();
   call-script deactivatescr();
  }


#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"	// Second time (of two)

Create()
 { dont-shade pad;
   dont-shade body;
   dont-shade light;
   dont-shade nano1;
   dont-shade nano2;
   dont-shade arm1;
   dont-shade arm2;
   spray=0;
   call-script InitState();
   start-script SmokeUnit();
  }

QueryNanoPiece(piecenum)
{ 
  if( spray == 0 )
	{
	piecenum=spray1;
	}
  if( spray == 1 )
   	{ 
	piecenum=spray2; 
	}
  if( spray == 2 )
   	{ 
	piecenum=spray3; 
	}
  spray = spray+1;
  if( spray >= 3  )
   	{ 
	spray=0; 
	}
 }

Activate()
 { signal SIG_ACTIVATE;
   start-script RequestState( ACTIVE );
  }

Deactivate()
 { signal SIG_ACTIVATE;
   set-signal-mask SIG_ACTIVATE;
   sleep 5000;
   set-signal-mask 0;
   start-script RequestState( INACTIVE );
  }

StartBuilding()
 { spin pad around y-axis speed <30> accelerate <2>;
   dont-cache pad;
  }

StopBuilding()
 { stop-spin pad around y-axis decelerate <2>;
   cache pad;
  }

QueryBuildInfo(piecenum)
 { piecenum=pad;
  }

SweetSpot(piecenum)
 { piecenum=body;
  }

Killed( severity, corpsetype )
 { explode arm1 type BITMAPONLY | BITMAP4;
   explode body type BITMAPONLY | BITMAP4;
   explode pad type BITMAPONLY | BITMAP4;
   explode nano1 type SHATTER | EXPLODE_ON_HIT | BITMAP3;
   explode nano2 type SHATTER | EXPLODE_ON_HIT | BITMAP3;
   if (severity <= 25)
    { corpsetype = 1;
      return( 0 );
     }
   if (severity <= 50)
    { corpsetype = 2;
      explode arm2 type FALL | BITMAP2;
      explode nano2 type FALL | BITMAP3;
      explode nano1 type FALL | BITMAP4;
      explode light type FALL | BITMAP5;
      return( 0 );
     }
   corpsetype = 3;
   explode nano2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
   explode nano1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
   explode pad type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP4;
   explode light type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
   explode body type SHATTER | EXPLODE_ON_HIT | BITMAP3;
   explode arm2 type SHATTER | EXPLODE_ON_HIT | BITMAP3;
  }
