#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, sleeve, flare1, flare2, leg1,
       leg3, leg4, leg6, body;

static-var  bMoving, restore_delay, gun_1;

// Signal definitions
#define SIG_AIM				2

#define SMOKEPIECE1 body


walk2()
{
	while( bMoving )
	{
		if( bMoving )
		{
			turn leg1 to y-axis <43.8> now;
			turn leg1 to y-axis <0.0> speed <219.0>;
			turn leg1 to z-axis <0.6> now;
			turn leg1 to z-axis <0.0> speed <3.0>;
			turn leg3 to y-axis <30.7> now;
			turn leg3 to y-axis <20.1> speed <3.0>;
			turn leg3 to z-axis <20.6> now;
			turn leg3 to z-axis <0.6> speed <155.1>;
			turn leg4 to y-axis <-40.1> now;
			turn leg4 to y-axis <-40.1> speed <0.0>;
			turn leg4 to z-axis <-31.0> now;
			turn leg4 to z-axis <-0.6> speed <152.1>;
			turn leg6 to y-axis <0.0> now;
			turn leg6 to y-axis <-30.4> speed <152.1>;
			turn leg6 to z-axis <-20.0> now;
			turn body to x-axis <5> speed <25>;
			sleep 200;
		}
		if( bMoving )
		{
			turn leg1 to z-axis <20.6> speed <158.1>;
		
			turn leg3 to y-axis <0.0> speed <170.3>;
			turn leg3 to z-axis <0.0> speed <3.0>;
			turn leg4 to y-axis <0.0> speed <200.7>;
		
			turn leg6 to z-axis <2.4> speed <237.2>;
			turn body to x-axis <0> speed <25>;
			sleep 200;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <45.0> speed <279.8>;
			turn leg1 to z-axis <30.0> speed <3.0>;
		
			turn leg3 to z-axis <20.6> speed <158.1>;
			turn leg4 to y-axis <-0.6> speed <3.0>;
			turn leg4 to z-axis <-31.0> speed <152.1>;
		
			turn leg6 to y-axis <3.0> speed <167.3>;
			turn body to x-axis <-5> speed <25>;
			sleep 200;
		}
		turn leg1 to y-axis <43.8> speed <60.8>;
		turn leg1 to z-axis <0.6> speed <152.1>;
	
		turn leg3 to y-axis <34.7> speed <173.4>;
		turn leg3 to z-axis <20.6> speed <0.0>;
		turn leg4 to y-axis <-40.1> speed <197.7>;
		turn leg4 to z-axis <-31.0> speed <0.0>;
	
		turn leg6 to y-axis <0.0> speed <15.2>;
		turn leg6 to z-axis <-20.0> speed <237.2>;
		turn body to x-axis <0> speed <25>;
		sleep 200;
	}
}
#include "SmokeUnit.h"

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walk2();
		}
		if( !Func_Var_1 )
		{
			sleep 100;
		}
	}
}

Create()
{
	hide flare1;
	hide flare2;
	bMoving = FALSE;
	gun_1 = base;
	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0.0> speed <90.0>;
	turn sleeve to x-axis <0.0> speed <90.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <90.0>;
	turn sleeve to x-axis <0.0> - pitch speed <90.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		gun_1 = 0;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP3;
		explode flare1 type BITMAPONLY | BITMAP4;
		explode flare2 type BITMAPONLY | BITMAP5;
		explode leg1 type BITMAPONLY | BITMAP1;
		explode leg3 type BITMAPONLY | BITMAP3;
		explode leg4 type BITMAPONLY | BITMAP4;
		explode leg6 type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP3;
		explode flare1 type FALL | BITMAP4;
		explode flare2 type FALL | BITMAP5;
		explode leg1 type FALL | BITMAP1;
		explode leg3 type FALL | BITMAP3;
		explode leg4 type FALL | BITMAP4;
		explode leg6 type FALL | BITMAP1;
		explode turret type SHATTER | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP3;
		explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode leg6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret type SHATTER | BITMAP2;
		return (0);
	}
	corpsetype = 3;

	explode body type BITMAPONLY | BITMAP3;
	explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode leg6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}
