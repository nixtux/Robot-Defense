piece base,body,turret1,turret2,turret3,sleeve1,sleeve2,sleeve3,wake1,wake2,wake3;
piece barrel1, barrel2, barrel3, barrel4, barrel5, barrel6, barrel7, flare1, flare2, flare3, flare4, flare5, flare6, flare7;

static-var fire1,fire2,fire3,restore_delay;

#define SIG_AIM1 2
#define SIG_AIM2 4
#define SIG_AIM3 8
#define SIG_WAKE 16

#define SMOKEPIECE1 base
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
{ hide flare5;
  hide flare4;
  hide flare3;
  hide flare1;
  hide flare2;
  hide flare6;
  hide flare7;
  fire1=0;
  fire2=0;
  fire3=0;
  restore_delay=3000;
  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay1()
{ sleep restore_delay;
  turn turret1 to y-axis 0 speed <55>;
  turn sleeve1 to x-axis 0 speed <25>;
 }
RestoreAfterDelay2()
{ sleep restore_delay;
  turn turret2 to y-axis 0 speed <55>;
  turn sleeve2 to x-axis 0 speed <25>;
 }
RestoreAfterDelay3()
{ sleep restore_delay;
  turn turret3 to y-axis 0 speed <35>;
  turn sleeve3 to x-axis 0 speed <15>;
 }


StartMoving()
{ signal SIG_WAKE;
  set-signal-mask SIG_WAKE;
  while (TRUE)
   { emit-sfx SFXTYPE_WAKE1 from wake1;
     emit-sfx SFXTYPE_WAKE1 from wake2;
     emit-sfx SFXTYPE_WAKE1 from wake3;
     sleep 300;
    }
 }

StopMoving()
{ signal SIG_WAKE;
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM1;
  set-signal-mask SIG_AIM1;
  if ( heading > <110> and heading < <250> )
	{
	return (FALSE);
	}
  turn turret1 to y-axis heading speed <80>;
  turn sleeve1 to x-axis (0-pitch) speed <55>;
  wait-for-turn turret1 around y-axis;
  wait-for-turn sleeve1 around x-axis;
  start-script RestoreAfterDelay1();
  return(TRUE);
 }

AimSecondary(heading,pitch)
{ signal SIG_AIM2;
  set-signal-mask SIG_AIM2;
    if ( heading > <110> and heading < <250> )
	{
	return (FALSE);
	}
  turn turret2 to y-axis heading speed <80>;
  turn sleeve2 to x-axis (0-pitch) speed <55>;
  wait-for-turn turret2 around y-axis;
  wait-for-turn sleeve2 around x-axis;
  start-script RestoreAfterDelay2();
  return(TRUE);
 }

AimTertiary(heading,pitch)
{ 
  signal SIG_AIM3;
  set-signal-mask SIG_AIM3;
  turn turret3 to y-axis heading speed <30>;
  turn sleeve3 to x-axis (0-pitch) speed <15>;
  wait-for-turn turret3 around y-axis;
  wait-for-turn sleeve3 around x-axis;
  start-script RestoreAfterDelay3();
  return(TRUE);
 }

FirePrimary()
{ 
if (fire1==0)
   { 
     move barrel1 to z-axis [-1] speed [500];
     show flare1;
     sleep 150; 
     move barrel1 to z-axis [0] speed [3.0];
     hide flare1; 
     fire1=1; 
     return 0; 
   }
  if (fire1==1)
   { 
     move barrel2 to z-axis [-1] speed [500];
     show flare2;
     sleep 150; 
     move barrel2 to z-axis [0] speed [3.0];
     hide flare2; 
     fire1=0; 
     return 0; 
    }
}

FireSecondary()
{
if (fire2==0)
   { 
     move barrel3 to z-axis [-1] speed [500];
     show flare3;
     sleep 150; 
     move barrel3 to z-axis [0] speed [3.0];
     hide flare3; 
     fire2=1; 
     return 0; 
   }
  if (fire2==1)
   { 
     move barrel4 to z-axis [-1] speed [500];
     show flare4;
     sleep 150; 
     move barrel4 to z-axis [0] speed [3.0];
     hide flare4; 
     fire2=0; 
     return 0; 
    }  
}

FireTertiary()
{
if (fire3==0)
   { 
     move barrel5 to z-axis [-1] speed [500];
     show flare5;
     sleep 150; 
     move barrel5 to z-axis [0] speed [3.0];
     hide flare5; 
     fire3=1; 
     return 0; 
   }
  if (fire3==1)
   { 
     move barrel6 to z-axis [-1] speed [500];
     show flare6;
     sleep 150; 
     move barrel6 to z-axis [0] speed [3.0];
     hide flare6; 
     fire3=2; 
     return 0; 
    }  
  if (fire3==2)
   { 
     move barrel7 to z-axis [-1] speed [500];
     show flare7;
     sleep 150; 
     move barrel7 to z-axis [0] speed [3.0];
     hide flare7; 
     fire3=0; 
     return 0; 
    }  
}

AimFromPrimary(piecenum)
{ piecenum=turret1;
 }

AimFromSecondary(piecenum)
{ piecenum=turret2;
 }

AimFromTertiary(piecenum)
{ piecenum=turret3;
 }

QueryPrimary(piecenum)
{ if (fire1==0) 
   { piecenum=flare1; }
  if (fire1==1) 
   { piecenum=flare2; }
 return 0; 
 }

QuerySecondary(piecenum)
{ if (fire2==0) 
   { piecenum=flare3; }
  if (fire2==1) 
   { piecenum=flare4; }
 return 0; 
 }

QueryTertiary(piecenum)
{ if (fire3==0) 
   { piecenum=flare5; }
  if (fire3==1) 
   { piecenum=flare6; }
  if (fire3==2) 
   { piecenum=flare7; }
 return 0; 
 }

SweetSpot(piecenum)
{ piecenum=turret1;
 }

Killed( severity, corpsetype )
{ hide flare1;
  hide flare2;
  hide flare3;
  hide flare4;
  hide flare5;
  explode barrel1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
  explode barrel6 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode barrel3 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode body type BITMAPONLY | BITMAP5;
  explode turret1 type BITMAPONLY | BITMAP4;
  explode turret3 type BITMAPONLY | BITMAP3;
  explode wake1 type BITMAPONLY | BITMAP3;
  explode wake2 type BITMAPONLY | BITMAP3;
  explode flare1 type BITMAPONLY | BITMAP3;
  explode flare2 type BITMAPONLY | BITMAP3;
  explode flare6 type BITMAPONLY | BITMAP3;
  if (severity <= 25)
   { corpsetype = 1; return( 0 ); }
  explode turret1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode barrel3 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode turret3 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
  explode barrel5 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
  if (severity <= 50)
   { corpsetype = 2; return( 0 ); }
  corpsetype = 3;
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
 }
