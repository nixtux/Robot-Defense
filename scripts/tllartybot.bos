#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, t1, turret, sleeve, flare1, flare2, barrel1, barrel2, pelvis, rleg,
       rfoot, lleg, lfoot, lthigh, rthigh, base,guns, flare3,flare4,barrel3,barrel4;

static-var  bMoving, bAiming, bCanAim, gun_1,gun_2;

// Signal definitions
#define SIG_AIM				4
#define SIG_AIM2				8


#define SMOKEPIECE1 torso




walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.9] now;
		move torso to y-axis [0.9] now;
		move torso to z-axis [0.0] now;
		move rleg to z-axis [0.0] now;
		move rfoot to z-axis [0.0] now;
		move lleg to z-axis [0.0] now;
		move lfoot to z-axis [0.0] now;
		turn torso to x-axis <-3.5> now;
		turn lthigh to x-axis <-13.0> now;
		turn rthigh to x-axis <13.0> now;
		turn rleg to x-axis <-50.6> now;
		turn rfoot to x-axis <57.0> now;
		turn lleg to x-axis <13.0> now;
		turn lfoot to x-axis <0.0> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.8] now;
		move torso to y-axis [0.9] now;
		turn torso to x-axis <-4.6> now;
		turn lthigh to x-axis <-7.4> now;
		turn rthigh to x-axis <-4.6> now;
		turn rleg to x-axis <-52.7> now;
		turn rfoot to x-axis <36.6> now;
		turn lleg to x-axis <21.5> now;
		turn lfoot to x-axis <-3.9> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.1> now;
		turn rthigh to x-axis <-7.9> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.7] now;
		turn torso to x-axis <-1.9> now;
		turn lthigh to x-axis <-5.3> now;
		turn rthigh to x-axis <-11.6> now;
		turn rleg to x-axis <-68.2> now;
		turn rfoot to x-axis <39.0> now;
		turn lleg to x-axis <28.8> now;
		turn lfoot to x-axis <-8.1> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.6] now;
		turn torso to x-axis <2.2> now;
		turn lthigh to x-axis <0.4> now;
		turn rthigh to x-axis <-22.5> now;
		turn rleg to x-axis <-38.3> now;
		turn rfoot to x-axis <61.5> now;
		turn lleg to x-axis <28.5> now;
		turn lfoot to x-axis <16.9> now;
		sleep 10;
	}
	if( bMoving )
	{
		move torso to y-axis [0.8] now;
		turn torso to x-axis <2.9> now;
		sleep 30;
	}
	if( bMoving )
	{
		move torso to y-axis [0.4] now;
		turn torso to x-axis <3.7> now;
		sleep 80;
	}
	if( bMoving )
	{
		move torso to y-axis [0.7] now;
		turn torso to x-axis <3.6> now;
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.7] now;
		move torso to y-axis [0.9] now;
		turn torso to x-axis <0.0> now;
		turn lthigh to x-axis <12.7> now;
		turn rthigh to x-axis <-20.0> now;
		turn rleg to x-axis <-34.5> now;
		turn rfoot to x-axis <54.5> now;
		turn lleg to x-axis <7.4> now;
		turn lfoot to x-axis <19.3> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.8] now;
		turn torso to x-axis <-2.3> now;
		turn lthigh to x-axis <15.8> now;
		turn rthigh to x-axis <-17.9> now;
		turn rleg to x-axis <-27.1> now;
		turn rfoot to x-axis <45.0> now;
		turn lleg to x-axis <-19.7> now;
		turn lfoot to x-axis <27.8> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.9] now;
		turn torso to x-axis <-4.5> now;
		turn lthigh to x-axis <8.1> now;
		turn rthigh to x-axis <-13.7> now;
		turn rleg to x-axis <13.7> now;
		turn rfoot to x-axis <0.0> now;
		turn lleg to x-axis <-38.3> now;
		turn lfoot to x-axis <42.5> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.8] now;
		turn torso to x-axis <-5.4> now;
		turn lthigh to x-axis <-0.3> now;
		turn rthigh to x-axis <-11.6> now;
		turn rleg to x-axis <27.8> now;
		turn rfoot to x-axis <-11.3> now;
		turn lleg to x-axis <-62.9> now;
		turn lfoot to x-axis <67.5> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.1> now;
		turn lthigh to x-axis <-5.1> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.7] now;
		turn torso to x-axis <-2.2> now;
		turn lthigh to x-axis <-7.7> now;
		turn rthigh to x-axis <-7.4> now;
		turn rleg to x-axis <31.3> now;
		turn rfoot to x-axis <-9.1> now;
		turn lleg to x-axis <-64.4> now;
		turn lfoot to x-axis <34.1> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.6] now;
		move torso to y-axis [0.8] now;
		turn torso to x-axis <2> now;
		turn lthigh to x-axis <-21.1> now;
		turn rthigh to x-axis <-1.8> now;
		turn rleg to x-axis <28.8> now;
		turn rfoot to x-axis <24.6> now;
		turn lleg to x-axis <-36.9> now;
		turn lfoot to x-axis <57.3> now;
		sleep 10;
	}
	if( bMoving )
	{
		move torso to y-axis [0.6] now;
		turn torso to x-axis <2.6> now;
		sleep 30;
	}
	if( bMoving )
	{
		move torso to y-axis [0.4] now;
		turn torso to x-axis <3.3> now;
		sleep 80;
	}
	if( bMoving )
	{
		move torso to y-axis [0.8] now;
		turn torso to x-axis <2.2> now;
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.7] now;
		move torso to y-axis [0.9] now;
		turn torso to x-axis <0.0> now;
		turn lthigh to x-axis <-15.8> now;
		turn rthigh to x-axis <10.2> now;
		turn rleg to x-axis <-12.7> now;
		turn lleg to x-axis <-29.2> now;
		turn lfoot to x-axis <45.4> now;
		sleep 130;
	}
	move pelvis to y-axis [0.8] now;
	turn torso to x-axis <-2.3> now;
	turn lthigh to x-axis <-13.4> now;
	turn rthigh to x-axis <10.5> now;
	turn rleg to x-axis <-30.6> now;
	turn rfoot to x-axis <32.7> now;
	turn lleg to x-axis <-14.8> now;
	turn lfoot to x-axis <28.1> now;
	sleep 110;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.9] now;
		move rleg to z-axis [0.0] now;
		move rfoot to z-axis [0.0] now;
		move lleg to z-axis [0.0] now;
		move lfoot to z-axis [0.0] now;
		turn lthigh to x-axis <-13.0> now;
		turn rthigh to x-axis <13.0> now;
		turn rleg to x-axis <-50.6> now;
		turn rfoot to x-axis <57.0> now;
		turn lleg to x-axis <13.0> now;
		turn lfoot to x-axis <0.0> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.8] now;
		turn lthigh to x-axis <-7.4> now;
		turn rthigh to x-axis <-4.6> now;
		turn rleg to x-axis <-52.7> now;
		turn rfoot to x-axis <36.6> now;
		turn lleg to x-axis <21.5> now;
		turn lfoot to x-axis <-3.9> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn rthigh to x-axis <-7.9> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.7] now;
		turn lthigh to x-axis <-5.3> now;
		turn rthigh to x-axis <-11.6> now;
		turn rleg to x-axis <-68.2> now;
		turn rfoot to x-axis <39.0> now;
		turn lleg to x-axis <28.8> now;
		turn lfoot to x-axis <-8.1> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.6] now;
		turn lthigh to x-axis <0.4> now;
		turn rthigh to x-axis <-22.5> now;
		turn rleg to x-axis <-38.3> now;
		turn rfoot to x-axis <61.5> now;
		turn lleg to x-axis <28.5> now;
		turn lfoot to x-axis <16.9> now;
		sleep 10;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		sleep 80;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.7] now;
		turn lthigh to x-axis <12.7> now;
		turn rthigh to x-axis <-20.0> now;
		turn rleg to x-axis <-34.5> now;
		turn rfoot to x-axis <54.5> now;
		turn lleg to x-axis <7.4> now;
		turn lfoot to x-axis <19.3> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.8] now;
		turn lthigh to x-axis <15.8> now;
		turn rthigh to x-axis <-17.9> now;
		turn rleg to x-axis <-27.1> now;
		turn rfoot to x-axis <45.0> now;
		turn lleg to x-axis <-19.7> now;
		turn lfoot to x-axis <27.8> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.9] now;
		turn lthigh to x-axis <8.1> now;
		turn rthigh to x-axis <-13.7> now;
		turn rleg to x-axis <13.7> now;
		turn rfoot to x-axis <0.0> now;
		turn lleg to x-axis <-38.3> now;
		turn lfoot to x-axis <42.5> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.8] now;
		turn lthigh to x-axis <-0.3> now;
		turn rthigh to x-axis <-11.6> now;
		turn rleg to x-axis <27.8> now;
		turn rfoot to x-axis <-11.3> now;
		turn lleg to x-axis <-62.9> now;
		turn lfoot to x-axis <67.5> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn lthigh to x-axis <-5.1> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.7] now;
		turn lthigh to x-axis <-7.7> now;
		turn rthigh to x-axis <-7.4> now;
		turn rleg to x-axis <31.3> now;
		turn rfoot to x-axis <-9.1> now;
		turn lleg to x-axis <-64.4> now;
		turn lfoot to x-axis <34.1> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.6] now;
		turn lthigh to x-axis <-21.1> now;
		turn rthigh to x-axis <-1.8> now;
		turn rleg to x-axis <28.8> now;
		turn rfoot to x-axis <24.6> now;
		turn lleg to x-axis <-36.9> now;
		turn lfoot to x-axis <57.3> now;
		sleep 10;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		sleep 80;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.7] now;
		turn lthigh to x-axis <-15.8> now;
		turn rthigh to x-axis <10.2> now;
		turn rleg to x-axis <-12.7> now;
		turn lleg to x-axis <-29.2> now;
		turn lfoot to x-axis <45.4> now;
		sleep 130;
	}
	move pelvis to y-axis [0.8] now;
	turn lthigh to x-axis <-13.4> now;
	turn rthigh to x-axis <10.5> now;
	turn rleg to x-axis <-30.6> now;
	turn rfoot to x-axis <32.7> now;
	turn lleg to x-axis <-14.8> now;
	turn lfoot to x-axis <28.1> now;
	sleep 110;
}
#include "SmokeUnit.h"

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				bCanAim = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				bCanAim = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			bCanAim = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.0] NOW;
				turn rthigh to x-axis <0.0> speed <200.0>;
				turn rleg to x-axis <0.0> speed <200.0>;
				turn rfoot to x-axis <0.0> speed <200.0>;
				turn lthigh to x-axis <0.0> speed <200.0>;
				turn lleg to x-axis <0.0> speed <200.0>;
				turn lfoot to x-axis <0.0> speed <200.0>;
				if( !aiming )
				{
					turn torso to y-axis <0.0> speed <90.0>;
					turn torso to z-axis <0.0> speed <90.0>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	bMoving = FALSE;
	bAiming = FALSE;
	bCanAim = 1;
	gun_1 = 0;
	gun_2 = 0;

	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

RestoreAfterDelay()
{
	sleep 3000;
	turn turret to y-axis <0> speed <90.0>;
	turn sleeve to x-axis <0> speed <45.0>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <90.0>;
	turn sleeve to x-axis (0-pitch) speed <45.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return ( TRUE );
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1 to z-axis [-1] speed [100];
		show flare1;
		sleep 100;
		hide flare1;
		move barrel1 to z-axis [0] speed [4];
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		move barrel2 to z-axis [-1] speed [100];
		show flare2;
		sleep 100;
		hide flare2;
		move barrel2 to z-axis [0.0] speed [4];
		gun_1 = 0;
		return (0);
	}
}


AimFromSecondary(piecenum)
{
	piecenum = torso;
}

QuerySecondary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare3;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare4;
	}
}

RestoreAfterDelay2()
{
	sleep 2750;
	turn torso to y-axis <0> speed <90>;
	turn t1 to y-axis <0> speed <90>;
	bAiming = FALSE;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	bAiming = TRUE;
	while( !bCanAim )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <90>;
	TURN t1 to y-axis heading * -1 SPEED <90>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireSecondary()
{
	if( gun_2 == 0 )
	{
		move barrel3 to z-axis [-2] speed [500];
		show flare3;
		sleep 100;
		hide flare3;
		move barrel3 to z-axis [0] speed [4];
		gun_2 = 1;
		return (0);
	}
	if( gun_2 == 1 )
	{	
		move barrel4 to z-axis [-2] speed [500];
		show flare4;
		sleep 100;
		hide flare4;
		move barrel4 to z-axis [0] speed [4];
		gun_2 = 0;
		return (0);
	}
}


Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode sleeve type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode barrel1 type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode barrel2 type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type FALL | BITMAP1;
		explode torso type SHATTER | BITMAP2;
		explode lfoot type FALL | BITMAP4;
		explode barrel1 type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode lthigh type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode barrel2 type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rthigh type FALL | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode torso type SHATTER | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode sleeve type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode sleeve type BITMAPONLY | BITMAP5;
}
