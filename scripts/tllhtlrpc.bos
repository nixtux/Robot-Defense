#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, fusee, fum1,fum2,fum3,flare1,flare2, antenne, arm,flare, lights,p1,p2,p3;

static-var  OK, restore_delay,fumok;

// Signal definitions
#define SIG_AIM				2

#define SMOKEPIECE1 base
#define EXPLODEPIECE1 arm

#include "StateChg.h"

activatescr()
{
	if( TRUE )
	{
	dont-cache lights;
	SLEEP 1000;
	}
	sleep 300;
}

deactivatescr()
{
	if( TRUE )
	{	
	SLEEP 1000;
	cache lights;
	}

	sleep 110;
}
#include "Explodepartsnorock.h"

Go()
{
	dont-cache lights;
	call-script activatescr();
	OK = 1;
}

Stop()
{
	OK = 0;
	sleep 10000;
	call-script deactivatescr();
	cache lights;	
}

fum()
{
While (fumok==1)
	{
	emit-sfx 256 | 1 from fum1;
	emit-sfx 256 | 1 from fum2;
	emit-sfx 256 | 1 from fum3;
	sleep 250;
	}
}

Launchsequence()
{
	SLEEP 7500;
	start-script fum();

	move p1 to y-axis [100] speed [5];
	SHOW flare1;
	SLEEP 50;
	HIDE flare1;
	spin flare1 around y-axis speed <300>;

	SLEEP 50;
	SHOW flare1;
	SLEEP 50;

	HIDE flare1;
	SLEEP 50;
	SHOW flare1;

	SLEEP 50;
	HIDE flare1;
	SLEEP 50;

	turn arm to y-axis <90> speed <60>;
	spin flare2 around y-axis speed <500>;
	SHOW flare2;
	SHOW flare1;
	SLEEP 50;
	HIDE flare1;

	SLEEP 50;
	SHOW flare1;
	SLEEP 50;
	HIDE flare1;
	Sleep 1000;
	move p2  to y-axis [100] speed [20];
	sleep 1000;
	move p3 to y-axis [100] speed [80];
	sleep 1000;
	move fusee to y-axis [100] speed [100];
	sleep 1000;
	fumok=0;
	hide flare2;
	hide fusee;
	spin antenne around y-axis speed <50>;
}


#define ACTIVATECMD		call-script Go();
#define DEACTIVATECMD		call-script Stop();
#include "StateChg.h"

Create()
{
	dont-shade arm;
	dont-shade fusee;
	dont-shade body;
	dont-shade antenne;
	dont-cache flare;
	dont-cache flare1;
	dont-cache flare2;
	dont-cache fusee;

	hide flare;
	hide flare1;
	hide flare2;

	OK = 0;
	fumok=1;

	turn body to y-axis <20> now;

	restore_delay = 3000;
	call-script InitState();
	 while (get BUILD_PERCENT_LEFT)
    		{
		sleep 500; 
		}
	call-script Launchsequence();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SetMaxReloadTime(time)
{
	restore_delay = time * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !OK )
	{
		sleep 1000;
		start-script RequestState(0);
	}
	dont-cache antenne;
	turn antenne to y-axis <-45> speed <50>;
	wait-for-turn antenne around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}


FirePrimary()
{
	OK = 0;

	sleep 5000;
	start-script RequestState(1);
	spin antenne around y-axis speed <50>;
	cache antenne;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode antenne type BITMAPONLY | BITMAP1;
		explode body type BITMAPONLY | BITMAP2;
		explode arm type BITMAPONLY | BITMAP4;
		explode flare1 type BITMAPONLY | BITMAP5;
		explode flare2 type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type SHATTER | BITMAP1;
		explode arm type FALL | BITMAP4;
		explode flare type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP1;
		explode antenne type BITMAPONLY | BITMAP2;
		explode arm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode flare type BITMAPONLY | BITMAP2;
	explode antenne type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode arm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
}
