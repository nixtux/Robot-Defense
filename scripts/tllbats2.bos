//Core Battleship Script

piece  base, hull, turret1, sleeve1, barrel1, flare1, barrel2, flare2, turret2, sleeve2, barrel, flare, wake1, wake2, wake3;

static-var gun_0;

#define SIG_AIM1	2
#define SIG_AIM2	4
#define	SIG_WAKE	8
#define SIG_RESTORE	16
#define SMOKEPIECE1 hull
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
	{
	hide flare;
	hide flare1;
	hide flare2;
	hide wake1;
	hide wake2;
	hide wake3;
 
	gun_0=1;
 
	start-script SmokeUnit();

	}

StartMoving()
	{
	signal SIG_WAKE;
	set-signal-mask SIG_WAKE;
	while (TRUE)
		{
		emit-sfx SFXTYPE_WAKE1 from wake1;
		emit-sfx SFXTYPE_WAKE1 from wake2;
		emit-sfx SFXTYPE_WAKE1 from wake3;
		sleep 150;
		}
	}

StopMoving()
	{
	signal SIG_WAKE;
	}
RestoreAfterDelay1()
{
	sleep 3000;
	turn turret1 to y-axis <0> speed <50>;
	turn sleeve1 to x-axis <0> speed <50>;
	WAIT-FOR-TURN turret1 around y-axis;
    	WAIT-FOR-TURN sleeve1 around x-axis;
}

RestoreAfterDelay2()
{
	sleep 3000;
	turn turret2 to y-axis <0> speed <50>;
	turn sleeve2 to x-axis <0> speed <50>;
}

AimPrimary(heading,pitch)
	{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	
	TURN sleeve1 to x-axis (0-pitch) SPEED <50>;
	turn turret1 to y-axis heading speed <55>;
    	WAIT-FOR-TURN turret1 around y-axis;
    	WAIT-FOR-TURN sleeve1 around x-axis;
	start-script RestoreAfterDelay1();
	return(TRUE);
	}

AimSecondary(heading,pitch)
	{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	if (Heading > <150> and Heading < <210>)
         		{  
		start-script RestoreAfterDelay2();
   	        	return 0;         
		}
	turn turret2 to y-axis heading speed <55>;
	turn sleeve2 to x-axis (0-pitch) speed <30>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay2();
	return(TRUE);
	}

FirePrimary()
	{
	if (gun_0==1) 
		{
		show flare1;
		move barrel1 to z-axis [-2] speed [500];
		sleep 150;
		hide flare1;
		move barrel1 to z-axis [0] speed [5];
		gun_0=2;
		return (0);
		}
	if (gun_0==2) 
		{
		show flare2;
		move barrel2 to z-axis [-2] speed [500];
		sleep 150;
		hide flare2;
		move barrel2 to z-axis [0] speed [5];
		gun_0=1;
		return (0);
		}
	}
	
FireSecondary()
	{
		move barrel to z-axis [-1] speed [500];
		wait-for-move barrel along z-axis;
		move barrel to z-axis [0] speed [3];
		show flare;
		sleep 150;
		hide flare;
	}

AimFromPrimary(piecenum)
	{
	piecenum=turret1;
	}

QuerySecondary(piecenum)
	{
	piecenum=flare;
	}

AimFromSecondary(piecenum)
	{
	piecenum=turret2;
	}

QueryPrimary(piecenum)
	{
	if (gun_0==1) 
		{
		piecenum=flare1;
		}
	if (gun_0==2) 
		{
		piecenum=flare2; 
		}
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	hide flare;
	hide flare1;
	hide flare2;
	if (severity <= 25)
		{
		corpsetype = 1;
		explode barrel1 type	BITMAPONLY | BITMAP1;
		explode barrel2 type	BITMAPONLY | BITMAP2;
		explode base type	BITMAPONLY | BITMAP4;
		explode flare type	BITMAPONLY | BITMAP5;
		explode flare1 type	BITMAPONLY | BITMAP1;
		explode flare2 type	BITMAPONLY | BITMAP2;
		explode turret1 type	BITMAPONLY | BITMAP4;
		explode sleeve1 type	BITMAPONLY | BITMAP5;
		explode turret2 type	BITMAPONLY | BITMAP1;
		explode wake1 type	BITMAPONLY | BITMAP3;
		explode wake2 type	BITMAPONLY | BITMAP4;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode barrel1 type	FALL | BITMAP1;
		explode barrel2 type	FALL | BITMAP2;
		explode base type	BITMAPONLY | BITMAP4;
		explode flare type	FALL | BITMAP5;
		explode flare1 type	FALL | BITMAP1;
		explode flare2 type	FALL | BITMAP2;
		explode sleeve1 type	FALL | BITMAP4;
		explode hull type	SHATTER | BITMAP5;
		explode turret1 type	BITMAPONLY | BITMAP1;
		explode turret2 type	BITMAPONLY | BITMAP2;
		explode wake1 type	FALL | BITMAP3;
		explode wake2 type	FALL | BITMAP4;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode barrel1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode base type	BITMAPONLY | BITMAP4;
		explode flare type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode flare1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode flare2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode sleeve1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode hull type	SHATTER | BITMAP5;
		explode turret1 type	BITMAPONLY | BITMAP1;
		explode turret2 type	BITMAPONLY | BITMAP2;
		explode wake1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wake2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return( 0 );
		}

	corpsetype = 3;
	explode barrel1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode base type	BITMAPONLY | BITMAP4;
	explode flare type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode flare1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode flare2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode sleeve1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode hull type	SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode turret1 type	BITMAPONLY | BITMAP1;
	explode turret2 type	BITMAPONLY | BITMAP2;
	explode wake1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wake2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	return( 0 );
	}
