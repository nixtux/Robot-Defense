#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  groundplane, base, turret1, barrel1A, flare1A, barrel1B, flare1B, barrel1C,
       flare1C, turret2, barrel2A, flare2A, barrel2B, flare2B, barrel2C, flare2C,
       turret3, barrel3A, flare3A, barrel3B, flare3B, barrel3C, flare3C, turret4,
       sleeve4, barrel4, flare4, turret5, sleeve5, barrel5, flare5, turret6,
       barrel6a, flare6a, barrel6b, flare6b, barrel6c, flare6c, turbase;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

RestoreWeaps()
{
	while( Static_Var_7 >= 1 )
	{
		sleep 500;
		Static_Var_8 = get HEALTH;
		if( Static_Var_8 >= 35 )
		{
			show turret3;
			show barrel3A;
			show barrel3B;
			show barrel3C;
			Static_Var_7 = 0;
		}
	}
	return (0);
}

HitByWeapon()
{
	Static_Var_8 = get HEALTH;
	if( Static_Var_8 <= 32 AND Static_Var_7 == 0 )
	{
		Static_Var_7 = 1;
		explode turret3 type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode barrel3A type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode barrel3B type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode barrel3C type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		hide turret3;
		hide barrel3A;
		hide barrel3B;
		hide barrel3C;
	}
	start-script RestoreWeaps();
	return (0);
}

RestoreAfterDelay()
{
	sleep Static_Var_9;
	turn turret1 to y-axis <0.000000> speed <55.000000>;
	turn barrel1A to x-axis <0.000000> speed <30.000000>;
	turn barrel1B to x-axis <0.000000> speed <30.000000>;
	turn barrel1C to x-axis <0.000000> speed <30.000000>;
	turn turret2 to y-axis <0.000000> speed <55.000000>;
	turn barrel2A to x-axis <0.000000> speed <30.000000>;
	turn barrel2B to x-axis <0.000000> speed <30.000000>;
	turn barrel2C to x-axis <0.000000> speed <30.000000>;
	turn turret3 to y-axis <180.000000> speed <55.000000>;
	turn barrel3A to x-axis <0.000000> speed <30.000000>;
	turn barrel3B to x-axis <0.000000> speed <30.000000>;
	turn barrel3C to x-axis <0.000000> speed <30.000000>;
	turn turret4 to y-axis <0.000000> speed <55.000000>;
	turn barrel4 to x-axis <0.000000> speed <30.000000>;
	turn turret5 to y-axis <0.000000> speed <55.000000>;
	turn barrel5 to x-axis <0.000000> speed <30.000000>;
	turn turret6 to y-axis <0.000000> speed <55.000000>;
	turn barrel6a to x-axis <0.000000> speed <30.000000>;
	turn barrel6b to x-axis <0.000000> speed <30.000000>;
	turn barrel6c to x-axis <0.000000> speed <30.000000>;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	return (0);
}

Create()
{
	hide flare1A;
	hide flare1B;
	hide flare1C;
	hide flare2A;
	hide flare2B;
	hide flare2C;
	hide flare3A;
	hide flare3B;
	hide flare3C;
	hide flare4;
	hide flare5;
	hide flare6a;
	hide flare6b;
	hide flare6c;
	Static_Var_2 = 0;
	Static_Var_1 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_9 = 5000;
	Static_Var_7 = 0;
	turn turret3 to y-axis <180.000000> speed <500.000000>;
	start-script SmokeUnit();
	set ARMORED to 1;
	while( get 17 > 0 )
	{
		sleep 250;
	}
	dont-cache turret3;
	dont-cache barrel3A;
	dont-cache barrel3B;
	dont-cache barrel3C;
	Static_Var_7 = 0;
	call-script HitByWeapon();
	return (0);
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	signal 2;
	set-signal-mask 2;
	turn turret1 to y-axis Func_Var_1 speed <45.000000>;
	wait-for-turn turret1 around y-axis;
	if( Static_Var_1 == 0 )
	{
		wait-for-move barrel1A along z-axis;
		wait-for-move barrel1B along z-axis;
		wait-for-move barrel1C along z-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	signal 4;
	set-signal-mask 4;
	turn turret2 to y-axis Func_Var_1 speed <45.000000>;
	wait-for-turn turret2 around y-axis;
	if( Static_Var_2 == 0 )
	{
		wait-for-move barrel2A along z-axis;
		wait-for-move barrel2B along z-axis;
		wait-for-move barrel2C along z-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon3(Func_Var_1, Func_Var_2)
{
	signal 8;
	set-signal-mask 8;
	while( Static_Var_7 >= 1 )
	{
		sleep 500;
	}
	turn turret3 to y-axis Func_Var_1 speed <45.000000>;
	wait-for-turn turret3 around y-axis;
	if( Static_Var_3 == 0 )
	{
		wait-for-move barrel3A along z-axis;
		wait-for-move barrel3B along z-axis;
		wait-for-move barrel3C along z-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon4(Func_Var_1, Func_Var_2)
{
	signal 16;
	set-signal-mask 16;
	turn turret4 to y-axis Func_Var_1 speed <400.000000>;
	turn sleeve4 to x-axis <0.000000> - Func_Var_2 speed <350.000000>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn sleeve4 around x-axis;
	if( Static_Var_4 == 0 )
	{
		wait-for-move barrel4 along z-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon5(Func_Var_1, Func_Var_2)
{
	signal 32;
	set-signal-mask 32;
	turn turret5 to y-axis Func_Var_1 speed <400.000000>;
	turn sleeve5 to x-axis <0.000000> - Func_Var_2 speed <350.000000>;
	wait-for-turn turret5 around y-axis;
	wait-for-turn sleeve5 around x-axis;
	if( Static_Var_5 == 0 )
	{
		wait-for-move barrel5 along z-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon6(Func_Var_1, Func_Var_2)
{
	signal 64;
	set-signal-mask 64;
	turn turret6 to y-axis Func_Var_1 speed <45.000000>;
	wait-for-turn turret6 around y-axis;
	if( Static_Var_6 == 0 )
	{
		wait-for-move barrel6a along z-axis;
		wait-for-move barrel6b along z-axis;
		wait-for-move barrel6c along z-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( Static_Var_1 == 0 )
	{
		show flare1A;
		move barrel1A to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare1A;
		move barrel1A to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_1 == 1 )
	{
		show flare1B;
		move barrel1B to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare1B;
		move barrel1B to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_1 == 2 )
	{
		show flare1C;
		move barrel1C to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare1C;
		move barrel1C to z-axis [0.000000] speed [1.000000];
	}
	++Static_Var_1;
	if( Static_Var_1 == 3 )
	{
		Static_Var_1 = 0;
	}
	return (0);
}

FireWeapon2()
{
	if( Static_Var_2 == 0 )
	{
		show flare2A;
		move barrel2A to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare2A;
		move barrel2A to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_2 == 1 )
	{
		show flare2B;
		move barrel2B to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare2B;
		move barrel2B to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_2 == 2 )
	{
		show flare2C;
		move barrel2C to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare2C;
		move barrel2C to z-axis [0.000000] speed [1.000000];
	}
	++Static_Var_2;
	if( Static_Var_2 == 3 )
	{
		Static_Var_2 = 0;
	}
	return (0);
}

FireWeapon3()
{
	if( Static_Var_3 == 0 )
	{
		show flare3A;
		move barrel3A to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare3A;
		move barrel3A to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_3 == 1 )
	{
		show flare3B;
		move barrel3B to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare3B;
		move barrel3B to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_3 == 2 )
	{
		show flare3C;
		move barrel3C to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare3C;
		move barrel3C to z-axis [0.000000] speed [1.000000];
	}
	++Static_Var_3;
	if( Static_Var_3 == 3 )
	{
		Static_Var_3 = 0;
	}
	return (0);
}

FireWeapon4()
{
	if( Static_Var_4 == 0 )
	{
		show flare4;
		sleep 50;
		hide flare4;
		turn barrel4 to z-axis <90.000000> speed <350.000000>;
	}
	if( Static_Var_4 == 1 )
	{
		show flare4;
		sleep 50;
		hide flare4;
		turn barrel4 to z-axis <180.000000> speed <350.000000>;
	}
	if( Static_Var_4 == 2 )
	{
		show flare4;
		sleep 50;
		hide flare4;
		turn barrel4 to z-axis <270.000000> speed <350.000000>;
	}
	if( Static_Var_4 == 3 )
	{
		show flare4;
		sleep 50;
		hide flare4;
		turn barrel4 to z-axis <0.000000> speed <350.000000>;
	}
	++Static_Var_4;
	if( Static_Var_4 == 4 )
	{
		Static_Var_4 = 0;
	}
	return (0);
}

FireWeapon5()
{
	if( Static_Var_5 == 0 )
	{
		show flare5;
		sleep 50;
		hide flare5;
		turn barrel5 to z-axis <90.000000> speed <350.000000>;
	}
	if( Static_Var_5 == 1 )
	{
		show flare5;
		sleep 50;
		hide flare5;
		turn barrel5 to z-axis <180.000000> speed <350.000000>;
	}
	if( Static_Var_5 == 2 )
	{
		show flare5;
		sleep 50;
		hide flare5;
		turn barrel5 to z-axis <270.000000> speed <350.000000>;
	}
	if( Static_Var_5 == 3 )
	{
		show flare5;
		sleep 50;
		hide flare5;
		turn barrel5 to z-axis <0.000000> speed <350.000000>;
	}
	++Static_Var_5;
	if( Static_Var_5 == 4 )
	{
		Static_Var_5 = 0;
	}
	return (0);
}

FireWeapon6()
{
	if( Static_Var_6 == 0 )
	{
		show flare6a;
		move barrel6a to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare6a;
		move barrel6a to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_6 == 1 )
	{
		show flare6b;
		move barrel6b to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare6b;
		move barrel6b to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_6 == 2 )
	{
		show flare6c;
		move barrel6c to z-axis [-4.000000] speed [500.000000];
		sleep 150;
		hide flare6c;
		move barrel6c to z-axis [0.000000] speed [1.000000];
	}
	++Static_Var_6;
	if( Static_Var_6 == 3 )
	{
		Static_Var_6 = 0;
	}
	return (0);
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 2;
	return (0);
}

QueryWeapon1(Func_Var_1)
{
	if( Static_Var_1 == 0 )
	{
		Func_Var_1 = 4;
	}
	if( Static_Var_1 == 1 )
	{
		Func_Var_1 = 6;
	}
	if( Static_Var_1 == 2 )
	{
		Func_Var_1 = 8;
	}
	return (0);
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = 9;
	return (0);
}

QueryWeapon2(Func_Var_1)
{
	if( Static_Var_2 == 0 )
	{
		Func_Var_1 = 11;
	}
	if( Static_Var_2 == 1 )
	{
		Func_Var_1 = 13;
	}
	if( Static_Var_2 == 2 )
	{
		Func_Var_1 = 15;
	}
	return (0);
}

AimFromWeapon3(Func_Var_1)
{
	Func_Var_1 = 16;
	return (0);
}

QueryWeapon3(Func_Var_1)
{
	if( Static_Var_3 == 0 )
	{
		Func_Var_1 = 18;
	}
	if( Static_Var_3 == 1 )
	{
		Func_Var_1 = 20;
	}
	if( Static_Var_3 == 2 )
	{
		Func_Var_1 = 22;
	}
	return (0);
}

AimFromWeapon4(Func_Var_1)
{
	Func_Var_1 = 23;
	return (0);
}

QueryWeapon4(Func_Var_1)
{
	Func_Var_1 = 26;
	return (0);
}

AimFromWeapon5(Func_Var_1)
{
	Func_Var_1 = 27;
	return (0);
}

QueryWeapon5(Func_Var_1)
{
	Func_Var_1 = 30;
	return (0);
}

AimFromWeapon6(Func_Var_1)
{
	Func_Var_1 = 31;
	return (0);
}

QueryWeapon6(Func_Var_1)
{
	if( Static_Var_6 == 0 )
	{
		Func_Var_1 = 33;
	}
	if( Static_Var_6 == 1 )
	{
		Func_Var_1 = 35;
	}
	if( Static_Var_6 == 2 )
	{
		Func_Var_1 = 37;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel1B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel3B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel2A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel6a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode barrel1A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel1B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode sleeve4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode sleeve5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel3B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel2A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel6a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type BITMAPONLY | BITMAP4;
	explode base type FALL | EXPLODE_ON_HIT | BITMAP5;
	return (0);
}
