#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, link, rengine, lengine, rwing, lwing, jet1, jet2, jet3, body, jet4, jet5, l1;

static-var  Static_Var_1, unitviewer, OK;

#define SMOKEPIECE1 base

#include "StateChg.h"

activatescr()
{
	if( TRUE )
	{
	OK=1;
	turn l1 to x-axis <75> speed <50>;
	turn rwing to z-axis <-140> speed <50>;
	sleep 1100;
	turn lwing to z-axis <140> speed <80>;
	}
	sleep 44;
}

deactivatescr()
{
	if( TRUE )
	{
	OK=0;
	turn l1 to x-axis <0> speed <50>;
	turn lwing to z-axis <0> speed <50>;
	sleep 1200;
	turn rwing to z-axis <0> speed <80>;
	}
	sleep 44;
}
#include "SmokeUnit.h"
#define ACTIVATECMD			call-script activatescr();
#define DEACTIVATECMD		call-script deactivatescr();
#include "StateChg.h"

Create()
{
	unitviewer = FALSE;
	Static_Var_1 = 0;
	OK=0;
	call-script InitState();
	start-script SmokeUnit();
}

Demo()
{
	unitviewer = TRUE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryTransport(Func_Var_1)
{
	Func_Var_1 = link;
}

Activate()
{
	if( unitviewer )
	{
		start-script RequestState(0);
	}
}

BeginTransport(height)
{
	move link to z-axis (0 + height) now;
	start-script RequestState(0);
}

Deactivate()
{
	if( unitviewer )
	{
		start-script RequestState(1);
	}
}

EndTransport()
{
	start-script RequestState(1);
}

ProcessFlames()
{
	while( TRUE )
	{
		if( Static_Var_1 == 1 OR Static_Var_1 == 2 )
		{
			emit-sfx 0 from jet1;
			emit-sfx 0 from jet2;
			emit-sfx 0 from jet3;
			if (OK)
				{
				emit-sfx 0 from jet4;
				emit-sfx 0 from jet5;
				}
		}
		sleep 67;
	}
}

StartMoving()
{
	move rengine to x-axis [0.0] now;
	move rengine to x-axis [2.5] speed [3];
	move lengine to x-axis [0.0] now;
	move lengine to x-axis [-2.5] speed [3];
	sleep 1000;

}

StopMoving()
{
	signal 2;
	Static_Var_1 = 0;
	move rengine to x-axis [2.5] now;
	move rengine to x-axis [0.0] speed [3];
	move lengine to x-axis [-2.5] now;
	move lengine to x-axis [0.0] speed [3];
	sleep 1000;
}

MoveRate1()
{
	signal 2;
	set-signal-mask 2;
	start-script ProcessFlames();
	Static_Var_1 = 1;
}

MoveRate2()
{
	signal 2;
	set-signal-mask 2;
	start-script ProcessFlames();
	Static_Var_1 = 2;
}

MoveRate3()
{
	signal 2;
	set-signal-mask 2;
	start-script ProcessFlames();
	Static_Var_1 = 3;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lengine type BITMAPONLY | BITMAP1;
		explode rengine type BITMAPONLY | BITMAP2;
		explode rwing type BITMAPONLY | BITMAP3;
		explode base type BITMAPONLY | BITMAP4;
		explode jet1 type BITMAPONLY | BITMAP5;
		explode jet2 type BITMAPONLY | BITMAP1;
		explode jet3 type BITMAPONLY | BITMAP2;
		explode lwing type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode rengine type BITMAPONLY | BITMAP1;
		explode lengine type BITMAPONLY | BITMAP2;
		explode body type SHATTER | BITMAP3;
		explode base type BITMAPONLY | BITMAP4;
		explode jet1 type FALL | BITMAP5;
		explode jet2 type FALL | BITMAP1;
		explode jet3 type FALL | BITMAP2;
		explode lwing type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode rengine type BITMAPONLY | BITMAP1;
		explode lengine type BITMAPONLY | BITMAP2;
		explode body type SHATTER | BITMAP3;
		explode lwing type BITMAPONLY | BITMAP4;
		explode jet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode jet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode jet3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode rengine type BITMAPONLY | BITMAP1;
	explode lengine type BITMAPONLY | BITMAP2;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode rwing type BITMAPONLY | BITMAP4;
	explode jet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode jet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode jet3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
