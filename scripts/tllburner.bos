#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body, flare, head, rfoot, lfoot, lleg, rleg, hips,
       barrel, sleeve;

static-var  bMoving, bAiming, Static_Var_3, Static_Var_4, restore_delay,
            Static_Var_6;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4


walk()
{
	if( TRUE )
	{
		move body to y-axis [0.000000] now;
		move head to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn lleg to x-axis <-41.357143> now;
		turn rleg to x-axis <54.736264> now;
		turn rfoot to x-axis <-34.670330> now;
		turn lfoot to x-axis <13.379121> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [-0.200000] now;
		move rleg to y-axis [0.500000] now;
		turn lleg to x-axis <-41.357143> now;
		turn rleg to x-axis <55.346154> now;
		turn rfoot to x-axis <-17.934066> now;
		turn lfoot to x-axis <34.670330> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.649994] now;
		move rleg to y-axis [1.000000] now;
		turn lleg to x-axis <-32.236264> now;
		turn rleg to x-axis <55.956044> now;
		turn rfoot to x-axis <-1.214286> now;
		turn lfoot to x-axis <17.027473> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.350000] now;
		move rleg to y-axis [1.900000] now;
		move rfoot to y-axis [0.000000] now;
		turn lleg to x-axis <-10.945055> now;
		turn rleg to x-axis <18.247253> now;
		turn rfoot to x-axis <-17.637363> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.950000] now;
		move rleg to y-axis [1.949994] now;
		move rfoot to y-axis [0.000000] now;
		turn lleg to x-axis <3.038462> now;
		turn rleg to x-axis <4.857143> now;
		turn rfoot to x-axis <-22.192308> now;
		turn rfoot to y-axis <0.000000> now;
		turn lfoot to x-axis <-16.725275> now;
		sleep 70;
	}
	if( TRUE )
	{
		move hips to z-axis [0.000000] now;
		move lleg to y-axis [0.950000] now;
		move rleg to y-axis [1.999994] now;
		move rfoot to y-axis [0.000000] now;
		turn lleg to x-axis <11.549451> now;
		turn rleg to x-axis <-8.505495> now;
		turn rfoot to x-axis <-26.758242> now;
		turn rfoot to y-axis <0.000000> now;
		turn lfoot to x-axis <-24.324176> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.475000] now;
		move rleg to y-axis [1.774994] now;
		turn lleg to x-axis <17.027473> now;
		turn rleg to x-axis <-25.236264> now;
		turn rfoot to x-axis <-8.203297> now;
		turn lfoot to x-axis <-20.670330> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.000000] now;
		move rleg to y-axis [1.549994] now;
		turn lleg to x-axis <29.802198> now;
		turn rleg to x-axis <-41.967033> now;
		turn rfoot to x-axis <10.335165> now;
		turn lfoot to x-axis <-29.192308> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.000000] now;
		move rleg to y-axis [0.824994] now;
		turn lleg to x-axis <38.005495> now;
		turn rfoot to x-axis <10.335165> now;
		turn lfoot to x-axis <-33.148352> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.000000] now;
		move rleg to y-axis [0.099994] now;
		turn lleg to x-axis <55.956044> now;
		turn rfoot to x-axis <1.214286> now;
		turn lfoot to x-axis <-31.626374> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.500000] now;
		turn hips to z-axis <-3.335165> now;
		turn lleg to x-axis <46.225275> now;
		turn rleg to x-axis <-51.093407> now;
		turn rfoot to x-axis <15.813187> now;
		turn lfoot to x-axis <-19.456044> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.000000] now;
		turn lleg to x-axis <55.346154> now;
		turn rleg to x-axis <-60.214286> now;
		turn rfoot to x-axis <45.615385> now;
		turn lfoot to x-axis <-12.159341> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.299994] now;
		move rleg to y-axis [0.624994] now;
		turn lleg to x-axis <36.791209> now;
		turn rleg to x-axis <-46.225275> now;
		turn rfoot to x-axis <31.923077> now;
		turn lfoot to x-axis <-14.593407> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.599994] now;
		move rleg to y-axis [1.149994] now;
		turn lleg to x-axis <18.247253> now;
		turn rleg to x-axis <-32.236264> now;
		turn rfoot to x-axis <18.247253> now;
		turn lfoot to x-axis <-17.027473> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.799994] now;
		move rleg to y-axis [1.349994] now;
		turn lleg to x-axis <4.560440> now;
		turn rleg to x-axis <-18.549451> now;
		turn rfoot to x-axis <4.560440> now;
		turn lfoot to x-axis <-21.582418> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.999994] now;
		move rleg to y-axis [1.549994] now;
		turn lleg to x-axis <-9.115385> now;
		turn rleg to x-axis <-4.857143> now;
		turn rfoot to x-axis <-9.115385> now;
		turn lfoot to x-axis <-26.148352> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.424994] now;
		move rleg to y-axis [0.949994] now;
		turn lleg to x-axis <-30.412088> now;
		turn rleg to x-axis <4.857143> now;
		turn rfoot to x-axis <-14.901099> now;
		turn lfoot to x-axis <-15.203297> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.849994] now;
		move rleg to y-axis [0.350000] now;
		turn lleg to x-axis <-51.692308> now;
		turn rleg to x-axis <14.593407> now;
		turn rfoot to x-axis <-20.670330> now;
		turn lfoot to x-axis <-4.247253> now;
		sleep 70;
	}
	move lleg to y-axis [0.424994] now;
	move rleg to y-axis [0.175000] now;
	turn lleg to x-axis <-46.527473> now;
	turn rleg to x-axis <34.670330> now;
	turn rfoot to x-axis <-27.670330> now;
	turn rfoot to y-axis <0.000000> now;
	turn lfoot to x-axis <-2.736264> now;
	sleep 70;
}

walklegs()
{
	if( TRUE )
	{
		move rfoot to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn lleg to x-axis <-41.357143> now;
		turn rleg to x-axis <54.736264> now;
		turn rfoot to x-axis <-34.670330> now;
		turn lfoot to x-axis <13.379121> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [-0.200000] now;
		move rleg to y-axis [0.500000] now;
		turn lleg to x-axis <-41.357143> now;
		turn rleg to x-axis <55.346154> now;
		turn rfoot to x-axis <-17.934066> now;
		turn lfoot to x-axis <34.670330> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.649994] now;
		move rleg to y-axis [1.000000] now;
		turn lleg to x-axis <-32.236264> now;
		turn rleg to x-axis <55.956044> now;
		turn rfoot to x-axis <-1.214286> now;
		turn lfoot to x-axis <17.027473> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.350000] now;
		move rleg to y-axis [1.900000] now;
		move rfoot to y-axis [0.000000] now;
		turn lleg to x-axis <-10.945055> now;
		turn rleg to x-axis <18.247253> now;
		turn rfoot to x-axis <-17.637363> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.950000] now;
		move rleg to y-axis [1.949994] now;
		move rfoot to y-axis [0.000000] now;
		turn lleg to x-axis <3.038462> now;
		turn rleg to x-axis <4.857143> now;
		turn rfoot to x-axis <-22.192308> now;
		turn rfoot to y-axis <0.000000> now;
		turn lfoot to x-axis <-16.725275> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.950000] now;
		move rleg to y-axis [1.999994] now;
		move rfoot to y-axis [0.000000] now;
		turn lleg to x-axis <11.549451> now;
		turn rleg to x-axis <-8.505495> now;
		turn rfoot to x-axis <-26.758242> now;
		turn rfoot to y-axis <0.000000> now;
		turn lfoot to x-axis <-24.324176> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.475000] now;
		move rleg to y-axis [1.774994] now;
		turn lleg to x-axis <17.027473> now;
		turn rleg to x-axis <-25.236264> now;
		turn rfoot to x-axis <-8.203297> now;
		turn lfoot to x-axis <-20.670330> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.000000] now;
		move rleg to y-axis [1.549994] now;
		turn lleg to x-axis <29.802198> now;
		turn rleg to x-axis <-41.967033> now;
		turn rfoot to x-axis <10.335165> now;
		turn lfoot to x-axis <-29.192308> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.000000] now;
		move rleg to y-axis [0.824994] now;
		turn lleg to x-axis <38.005495> now;
		turn rfoot to x-axis <10.335165> now;
		turn lfoot to x-axis <-33.148352> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.000000] now;
		move rleg to y-axis [0.099994] now;
		turn lleg to x-axis <55.956044> now;
		turn rfoot to x-axis <1.214286> now;
		turn lfoot to x-axis <-31.626374> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.500000] now;
		turn lleg to x-axis <46.225275> now;
		turn rleg to x-axis <-51.093407> now;
		turn rfoot to x-axis <15.813187> now;
		turn lfoot to x-axis <-19.456044> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.000000] now;
		turn lleg to x-axis <55.346154> now;
		turn rleg to x-axis <-60.214286> now;
		turn rfoot to x-axis <45.615385> now;
		turn lfoot to x-axis <-12.159341> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.299994] now;
		move rleg to y-axis [0.624994] now;
		turn lleg to x-axis <36.791209> now;
		turn rleg to x-axis <-46.225275> now;
		turn rfoot to x-axis <31.923077> now;
		turn lfoot to x-axis <-14.593407> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.599994] now;
		move rleg to y-axis [1.149994] now;
		turn lleg to x-axis <18.247253> now;
		turn rleg to x-axis <-32.236264> now;
		turn rfoot to x-axis <18.247253> now;
		turn lfoot to x-axis <-17.027473> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.799994] now;
		move rleg to y-axis [1.349994] now;
		turn lleg to x-axis <4.560440> now;
		turn rleg to x-axis <-18.549451> now;
		turn rfoot to x-axis <4.560440> now;
		turn lfoot to x-axis <-21.582418> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.999994] now;
		move rleg to y-axis [1.549994] now;
		turn lleg to x-axis <-9.115385> now;
		turn rleg to x-axis <-4.857143> now;
		turn rfoot to x-axis <-9.115385> now;
		turn lfoot to x-axis <-26.148352> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [1.424994] now;
		move rleg to y-axis [0.949994] now;
		turn lleg to x-axis <-30.412088> now;
		turn rleg to x-axis <4.857143> now;
		turn rfoot to x-axis <-14.901099> now;
		turn lfoot to x-axis <-15.203297> now;
		sleep 70;
	}
	if( TRUE )
	{
		move lleg to y-axis [0.849994] now;
		move rleg to y-axis [0.350000] now;
		turn lleg to x-axis <-51.692308> now;
		turn rleg to x-axis <14.593407> now;
		turn rfoot to x-axis <-20.670330> now;
		turn lfoot to x-axis <-4.247253> now;
		sleep 70;
	}
	move hips to y-axis [-0.225000] now;
	move hips to z-axis [0.000000] now;
	move lleg to y-axis [0.424994] now;
	move rleg to y-axis [0.175000] now;
	turn lleg to x-axis <-46.527473> now;
	turn rleg to x-axis <34.670330> now;
	turn rfoot to x-axis <-27.670330> now;
	turn rfoot to y-axis <0.000000> now;
	turn lfoot to x-axis <-2.736264> now;
	sleep 70;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(Func_Var_1)
{
	Func_Var_1 = 1;
	while( TRUE )
	{
		if( bMoving )
		{
			if( bAiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !bAiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			Func_Var_1 = 1;
		}
		if( !bMoving )
		{
			Static_Var_3 = 1;
			if( Func_Var_1 )
			{
				move body to x-axis [0.000000] speed [1.000000];
				turn rleg to x-axis <0.000000> speed <200.038462>;
				turn rfoot to x-axis <0.000000> speed <200.038462>;
				turn lleg to x-axis <0.000000> speed <200.038462>;
				turn lfoot to x-axis <0.000000> speed <200.038462>;
				Func_Var_1 = 0;
			}
			sleep 100;
		}
	}
}

flames(Func_Var_1)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		Func_Var_1 = 300 + Rand( 50, 1000 );
		sleep Func_Var_1;
		emit-sfx 0 from flare;
		sleep 100;
		emit-sfx 0 from flare;
	}
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	hide flare;
	restore_delay = 3000;
	start-script flames();
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		if( Static_Var_6 == 3 )
		{
			emit-sfx 256 | 3 from lfoot;
			emit-sfx 256 | 3 from rfoot;
			emit-sfx 256 | 3 from body;
		}
		if( Static_Var_6 == 2 )
		{
			emit-sfx 256 | 3 from lfoot;
			emit-sfx 256 | 3 from rfoot;
			emit-sfx 3 from lleg;
			emit-sfx 3 from rleg;
			emit-sfx 3 from body;
		}
		if( Static_Var_6 == 1 )
		{
			emit-sfx 3 from lfoot;
			emit-sfx 3 from rfoot;
		}
		sleep 250;
	}
}

StopMoving()
{
	bMoving = FALSE;
	signal SIG_MOVE;
}

setSFXoccupy(state)
{
	Static_Var_6 = state;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn head to y-axis <0.000000> speed <90.000000>;
	turn sleeve to x-axis <0.000000> speed <60.000000>;
	wait-for-turn head around y-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = head;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

FirePrimary()
{
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn head to y-axis heading speed <75.000000>;
	wait-for-turn head around y-axis;
	turn sleeve to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode barrel type BITMAPONLY | BITMAP2;
		explode head type BITMAPONLY | BITMAP3;
		explode hips type BITMAPONLY | BITMAP4;
		explode lfoot type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP1;
		explode rfoot type BITMAPONLY | BITMAP2;
		explode rleg type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode barrel type FALL | BITMAP2;
		explode head type SHATTER | BITMAP3;
		explode hips type FALL | BITMAP4;
		explode lfoot type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode rfoot type FALL | BITMAP2;
		explode rleg type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP1;
		explode barrel type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode head type SHATTER | BITMAP3;
		explode hips type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode lfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode rfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode body type BITMAPONLY | BITMAP1;
	explode barrel type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode head type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode hips type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode lfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
}
