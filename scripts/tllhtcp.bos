piece base,body, doors, d1, d2, d3, d4, lights, pad, spray1, spray2, spray3, nano; 

static-var spray;

#define SIG_ACTIVATE 2
#define SMOKEPIECE1 body

#include "StateChg.h"
#include "sfxtype.h"
#include "exptype.h"

activatescr()
 	{ 
	SET ARMORED to FALSE;
	dont-cache d1;
	dont-cache d2;
	dont-cache d3;
	dont-cache d4;
	dont-cache pad;
	dont-cache nano;

	
	
		turn d1 to x-axis <5> speed <100>;
		turn d2 to z-axis <5> speed <100>;
		turn d3 to z-axis <-5> speed <100>;
		turn d4 to x-axis <-5> speed <100>;
		sleep 75;
		turn d1 to x-axis <-60> speed <50>;
		turn d2 to z-axis <-60> speed <50>;
		turn d3 to z-axis <60> speed <50>;
		turn d4 to x-axis <60> speed <50>;
		wait-for-turn d4 around z-axis;
		turn d1 to x-axis <-80> speed <20>;
		turn d2 to z-axis <-80> speed <20>;
		turn d3 to z-axis <80> speed <20>;
		turn d4 to x-axis <80> speed <20>;
		sleep 800;
		wait-for-turn d4 around z-axis;
		dont-cache lights;

	sleep 50;
  	}

deactivatescr()
 	{ 
	cache lights;
	if( TRUE )
		{
		turn d1 to x-axis <-20> speed <50>;
		turn d2 to z-axis <-20> speed <50>;
		turn d3 to z-axis <20> speed <50>;
		turn d4 to x-axis <20> speed <50>;
		wait-for-turn d4 around z-axis;
		}
	if( TRUE )
		{
		turn d1 to x-axis <5> speed <20>;
		turn d2 to z-axis <5> speed <20>;
		turn d3 to z-axis <-5> speed <20>;
		turn d4 to x-axis <5> speed <20>;
		wait-for-turn d4 around z-axis;
		}
	if( TRUE )
		{
		turn d1 to x-axis <0> speed <50>;
		turn d2 to z-axis <0> speed <50>;
		turn d3 to z-axis <0> speed <50>;
		turn d4 to x-axis <0> speed <50>;
		wait-for-turn d4 around z-axis;
		}
	cache pad;
	cache nano;
	cache d1;
	cache d2;
	cache d3;
	cache d4;

	SET ARMORED to TRUE;
	sleep 50;
  	}

#include "smokeunit.h"
#include "yard.h"

Go()
 	{ 
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to TRUE;
  	}

Stop()
 	{ 
	set INBUILDSTANCE to FALSE;
   	call-script CloseYard();
   	call-script deactivatescr();
	}

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h" 	//Second time (of two)

Create()
 	{ 
	dont-shade body;
	dont-shade d1;
	dont-shade d2;
	dont-shade d3;
	dont-shade d4;
	dont-shade pad;
	dont-shade lights;
	dont-shade nano;

   	spray=0;
	turn doors to y-axis <45> now;
	call-script InitState();
   	start-script SmokeUnit();
  	}

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
		{
		piecenum = spray1;
		}
	if( spray == 1 )
	{
		piecenum = spray2;
	}
	if( spray == 2 )
	{
		piecenum = spray3;
	}
	
	spray=spray+1;
	if( spray >= 3 )
	{
		spray=0;
	}
}

Activate()
 { signal SIG_ACTIVATE;
   start-script RequestState( ACTIVE );
  }

Deactivate()
 { signal SIG_ACTIVATE;
   set-signal-mask SIG_ACTIVATE;
   sleep 5000;
   set-signal-mask 0;
   start-script RequestState( INACTIVE );
  }

StartBuilding()
 { spin nano around y-axis speed <30> accelerate <2>;
  }

StopBuilding()
 { stop-spin nano around y-axis decelerate <2>;
  }

QueryBuildInfo(piecenum)
 { piecenum=pad;
  }

SweetSpot(piecenum)
 { piecenum=base;
  }

Killed( severity, corpsetype )
 { 
  explode d1 type BITMAPONLY | BITMAP4;
   explode d2 type BITMAPONLY | BITMAP4;
   explode pad type BITMAPONLY | BITMAP4;
   explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
   if (severity <= 25)
    { corpsetype = 1;
      return( 0 );
     }
   explode pad type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
   explode nano type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
   explode lights type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
   explode body type SHATTER | EXPLODE_ON_HIT | BITMAP3;

   if (severity <= 50)
    { corpsetype = 2;
      return( 0 );
     }
   corpsetype = 3;
   explode body type SHATTER | EXPLODE_ON_HIT | BITMAP5;
  }
